searchState.loadedDescShard("cosmic", 3, "Calls <code>U::from(self)</code>.\nReturns true if the <code>Cursor</code> is over the given <code>bounds</code>.\nReturns the absolute position of the <code>Cursor</code>, if available.\nReturns the relative position of the <code>Cursor</code> from the given …\nReturns the relative position of the <code>Cursor</code> inside the …\nReturns the absolute position of the <code>Cursor</code>, if available …\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA generic overlay.\nBuild and show dropdown menus.\nThe theme catalog of a <code>Menu</code>.\nThe item class of the <code>Catalog</code>.\nA list of selectable options.\nThe local state of a <code>Menu</code>.\nThe appearance of a <code>Menu</code>.\nA styling function for a <code>Menu</code>.\nThe <code>Background</code> of the menu.\nThe <code>Border</code> of the menu.\nThe default style of the list of a <code>Menu</code>.\nThe default class produced by the <code>Catalog</code>.\nThe default class for the scrollable of the <code>Menu</code>.\nThe default class for the scrollable of the <code>Menu</code>.\nSets the font of the <code>Menu</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Menu</code> with the given <code>State</code>, a list of options,\nCreates a new <code>State</code> for a <code>Menu</code>.\nTurns the <code>Menu</code> into an overlay <code>Element</code> at the given target …\nSets the <code>Padding</code> of the <code>Menu</code>.\nThe background <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of a selected option in the menu.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the menu.\nSets the text <code>text::LineHeight</code> of the <code>Menu</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Menu</code>.\nSets the text size of the <code>Menu</code>.\nSets the <code>text::Wrapping</code> mode of the <code>Menu</code>.\nSets the width of the <code>Menu</code>.\nPlatform specific actions defined for wayland\nWayland specific shell\nPlatform specific actions defined for wayland\nThe appearance of a program.\nThe default style of a <code>Program</code>.\nThe executor of the program.\nThe message of the program.\nThe internal definition of a <code>Program</code>.\nThe renderer of some <code>Program</code>.\nThe renderer of the program.\nThe state of the program.\nThe theme of the program.\nThe background <code>iced_core::Color</code> of the application.\nReturns the default style of a <code>Program</code>.\nThe default icon <code>iced_core::Color</code> of the application.\nRuns the <code>Program</code>.\nRuns the <code>Program</code> with the given settings, and a closure …\nThe default text <code>iced_core::Color</code> of the application.\nAn action that the iced runtime can perform.\nThe appearance of a program.\nRun a clipboard action.\nThe default style of a <code>Program</code>.\nRun a Dnd action.\nExits the runtime.\nLoad a font from its bytes.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nOutput some value.\nRun a platform specific action\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nRun a system action.\nA set of concurrent actions to be performed by the iced …\nThe theme used to draw the <code>Program</code>.\nA set of interactive graphical elements with a specific …\nRun a widget operation.\nRun a window action.\nThe background <code>iced_core::Color</code> of the application.\nAccess the clipboard.\nThe default <code>Appearance</code> of a <code>Program</code> with the built-in …\nReturns the default style of a <code>Program</code>.\nAccess the clipboard.\nCreates a <code>Task</code> that exits the iced runtime.\nLoad and use fonts.\nThe default icon <code>iced_core::Color</code> of the application.\nTrack keyboard events.\nA multi-window application.\nOverlays for user interfaces.\nBuild interactive programs using The Elm Architecture.\nAccess the native system.\nCreate runtime tasks.\nThe default text <code>iced_core::Color</code> of the application.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nImplement your own event loop to drive a user interface.\nReturns the widgets to display in the <code>Program</code>.\nBuild window-based GUI applications.\nThe bytes of the font to load.\nThe channel to send back the load result.\nA clipboard action to be performed by some <code>Task</code>.\nRead the clipboard and produce <code>String</code> with the result.\nRead the clipboard and produce <code>T</code> with the result.\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the primary clipboard.\nRead from the primary clipboard\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nWrite the given contents to the primary clipboard.\nWrite the given contents to the clipboard.\nThe channel to send the read contents.\nThe contents to be written.\nThe clipboard target.\nThe clipboard target.\nAn action to be performed on the system.\nEnd a Dnd operation.\nPeek the current Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nEnd a Dnd operation.\nRead the current contents of the Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nThe rectangles to register.\nThe surface to register.\nAn error while loading a font.\nLoad a font from its bytes.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a multi-window <code>Program</code>. It …\nThe theme used to draw the <code>Program</code>.\nBuild interactive programs using The Elm Architecture.\nThe internal state of a multi-window <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe execution state of a multi-window <code>Program</code>. It …\nAn overlay container that displays nested overlays\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a <code>Program</code>. It leverages caching, …\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code>.\nAn operation to be performed on the system.\nContains information about the system (e.g. system name, …\nQuery system information and produce <code>T</code> with the result.\nDetailed processor model information\nThe number of physical cores on the processor\nModel information for the active graphics adapter\nUnderlying graphics backend for rendering\nTotal RAM size, in bytes\nMemory used by this process, in bytes\nOperating system kernel version\nThe operating system name\nShort operating system version number\nLong operating system version\nA handle to a <code>Task</code> that can be used for aborting it.\nA set of concurrent actions to be performed by the iced …\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that executes the given <code>Action</code> and …\nReturns the underlying <code>Stream</code> of the <code>Task</code>.\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that runs the given <code>widget::Operation</code> …\nReusable data of a specific <code>UserInterface</code>.\nThe <code>UserInterface</code> is outdated and needs to be rebuilt.\nThe resulting state after updating a <code>UserInterface</code>.\nThe <code>UserInterface</code> is up-to-date and can be reused without …\nA set of interactive graphical elements with a specific …\nThe <code>window::RedrawRequest</code> when a redraw should be …\nAn operation to be performed on some window.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nDisable window blur.\nDisable mouse passthrough for the given window.\nMove the window with the left mouse button until the …\nEnable window blur.\nEnables mouse passthrough for the given window.\nBring the window to the front and sets input focus. Has no …\nGets the <code>Id</code> of the latest window.\nGet if the current window is maximized or not.\nGet if the current window is minimized or not.\nGet the current <code>Mode</code> of the window.\nGets the <code>Id</code> of the oldest window.\nGet the current logical coordinates of the window.\nGet the raw identifier unique to the window.\nGet the current scale factor (DPI) of the window.\nGet the current logical dimensions of the window.\nSet the window to maximized or back\nSet the window to minimized or back\nMove the window to the given logical coordinates.\nOpens a new window with some <code>Settings</code>.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nRuns the closure with the native window handle of the …\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nShow the system menu at cursor position.\nToggle whether window has decorations.\nToggle the window to maximized or back\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nSubscribes to all <code>Event::CloseRequested</code> occurrences in the …\nDisable the blur effect for a window.\nDisable mouse passthrough for the given window.\nBegins dragging the window while the left mouse button is …\nEnable the blur effect for a window.\nEnables mouse passthrough for the given window.\nSubscribes to all window events of the running application.\nSubscribes to the frames of the window of the running …\nBrings the window to the front and sets input focus. Has …\nGets the window <code>Id</code> of the latest window.\nGets the maximized state of the window with the given <code>Id</code>.\nGets the minimized state of the window with the given <code>Id</code>.\nGets the current <code>Mode</code> of the window.\nGets the window <code>Id</code> of the oldest window.\nGets the position in logical coordinates of the window …\nGets an identifier unique to the window, provided by the …\nGets the scale factor of the window with the given <code>Id</code>.\nGet the window’s size in logical dimensions.\nMaximizes the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nOpens a new window with the given <code>Settings</code>; producing the …\nSubscribes to all <code>Event::Opened</code> occurrences in the running …\nRequest user attention to the window. This has no effect …\nResizes the window to the given logical dimensions.\nSubscribes to all <code>Event::Resized</code> occurrences in the …\nRuns the given callback with the native window handle for …\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nCaptures a <code>Screenshot</code> from the window.\nShow the system menu at cursor position.\nThe size of the <code>Screenshot</code> in physical pixels.\nToggles the window decorations.\nToggles the window to maximized or back.\nThe settings of an iced program.\nIf set to true, the renderer will try to perform …\nThe default <code>Font</code> to be used.\nThe text size that will be used by default.\nIf set to true the application will exit when the main …\nThe fonts to load on boot.\nThe identifier of the application.\nWhether the application is a daemon\nA handle to a <code>Task</code> that can be used for aborting it.\nA set of concurrent actions to be performed by the iced …\nAborts the <code>Task</code> of this <code>Handle</code>.\nReturns a new <code>Handle</code> that will call <code>Handle::abort</code> whenever …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Task</code> of this <code>Handle</code> has been aborted.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant.\nReturns a <code>Subscription</code> that produces messages at a set …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA generic widget that produces a message when pressed.\nA widget capable of drawing 2D graphics.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA box that can be checked.\nA container that distributes its contents vertically.\nA widget for searching and selecting a single value from a …\nA reusable, custom widget that uses The Elm Architecture.\nA widget that aligns its contents inside of its boundaries.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe type of event this <code>Component</code> handles internally.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nA frame that displays an image while keeping aspect ratio.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA widget that only rebuilds its contents when necessary.\nThe built-in light variant.\nThe built-in Moonfly variant.\nEmit messages on mouse events.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant.\nA collection of panes distributed using either vertical or …\nA widget for selecting a single value from a list of …\nA bar that displays progress.\nA circular button representing a choice.\nThe default graphics renderer for <code>iced</code>.\nA widget that is aware of its dimensions.\nA container that distributes its contents horizontally.\nDisplay a horizontal or vertical rule for dividing content.\nA widget that can vertically display an infinite amount of …\nAn horizontal bar and a handle that selects a single value …\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nAn amount of empty space.\nA container that displays children on top of each other.\nThe internal state of this <code>Component</code>.\nA vector graphics image.\nA bunch of text.\nA multi-line text input.\nA field that can be filled with text.\nA built-in theme.\nA widget that applies any <code>Theme</code> to its contents.\nA toggler widget.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nAn element to display a widget over another.\nAn vertical bar and a handle that selects a single value …\nButtons allow your users to perform actions by pressing …\nCreates a new <code>Button</code> with the provided content.\nCanvases can be leveraged to draw interactive 2D graphics.\nCreates a new <code>Canvas</code>.\nCreates a new <code>Container</code> that fills all the available space …\nCheckboxes can be used to let users make binary choices.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nCombo boxes display a dropdown list of searchable and …\nCreates a new <code>ComboBox</code>.\nTurns an implementor of <code>Component</code> into an <code>Element</code> that can …\nContainers let you align a widget inside their boundaries.\nCreates a new <code>Container</code> with the provided content.\nFocuses the next focusable widget.\nFocuses the previous focusable widget.\nCreates a horizontal <code>Rule</code> with the given height.\nCreates a new <code>Space</code> widget that fills the available …\nDisplays a widget on top of another one, only when the …\nCreates an <code>Element</code> that displays the iced logo with the …\nImages display raster graphics in different formats (PNG, …\nCreates a new <code>Image</code>.\nKeyed widgets can provide hints to ensure continuity.\nCreates a new <code>keyed::Column</code> from an iterator of elements.\nCreates a keyed <code>Column</code> with the given children.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nCreates a new <code>List</code> with the provided <code>Content</code> and closure …\nA container intercepting mouse events.\nWraps the given widget and captures any mouse button …\nUpdate the <code>Component</code> state based on the provided <code>Operation</code>\nDisplay interactive elements on top of other widgets.\nPane grids let your users split regions of your …\nCreates a <code>PaneGrid</code> with the given <code>pane_grid::State</code> and …\nPick lists display a dropdown list of selectable options.\nCreates a new <code>PickList</code>.\nProgress bars visualize the progression of an extended …\nCreates a new <code>ProgressBar</code>.\nRadio buttons let users choose a single option from a …\nCreates a new <code>Radio</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Rich</code> text widget with the provided spans.\nCreates some <code>Rich</code> text with the given spans.\nCreates a new <code>Row</code> from an iterator.\nCreates a <code>Row</code> with the given children.\nRules divide space horizontally or vertically.\nScrollables let users navigate an endless amount of …\nCreates a new <code>Scrollable</code> with the provided content.\nReturns a <code>Size</code> hint for laying out the <code>Component</code>.\nSliders let users set a value by moving an indicator.\nCreates a new <code>Slider</code>.\nCreates a new <code>Span</code> of text with the provided content.\nCreates a new <code>Stack</code> with the given children.\nCreates a <code>Stack</code> with the given children.\nSvg widgets display vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nDraw and interact with text.\nCreates a new <code>Text</code> widget with the provided content.\nCreates a new <code>Text</code> widget with the provided content.\nText editors display a multi-line text input for text …\nCreates a new <code>TextEditor</code>.\nText inputs display fields that can be filled with text.\nCreates a new <code>TextInput</code>.\nA widget that applies any <code>Theme</code> to its contents.\nTogglers let users make binary choices by toggling a …\nCreates a new <code>Toggler</code>.\nTooltips display a hint of information over some element …\nCreates a new <code>Tooltip</code> for the provided content with the …\nProcesses an <code>Event</code> and updates the <code>Component</code> state …\nCreates a new <code>Text</code> widget that displays the provided value.\nCreates a vertical <code>Rule</code> with the given width.\nSliders let users set a value by moving an indicator.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Space</code> widget that fills the available …\nProduces the widgets of the <code>Component</code>, which may trigger …\nThe <code>Button</code> can be pressed.\nA generic widget that produces a message when pressed.\nThe theme catalog of a <code>Button</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Button</code> cannot be pressed.\nThe <code>Button</code> can be pressed and it is being hovered.\nThe <code>Button</code> is being pressed.\nThe possible status of a <code>Button</code>.\nThe style of a button.\nA styling function for a <code>Button</code>.\nThe <code>Background</code> of the button.\nThe <code>Border</code> of the button.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nA danger button; denoting a destructive action.\nThe default class produced by the <code>Catalog</code>.\nProduces a <code>Task</code> that focuses the <code>Button</code> with the given <code>Id</code>.\nThe icon <code>Color</code> of the button.\nA primary button; denoting a main action.\nA secondary button; denoting a complementary action.\nThe <code>Shadow</code> of the button.\nThe <code>Style</code> of a class with the given status.\nA success button; denoting a good outcome.\nA text button; useful for links.\nThe text <code>Color</code> of the button.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe frame supported by a renderer.\nThe geometry supported by a renderer.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA cache group.\nA raster image that can be drawn.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nThe border radii of the image\nThe color of the text\nThe contents of the text\nDraws the state of the <code>Program</code>, producing a bunch of …\nHandle events of a canvas.\nThe filter method of the image.\nThe font of the text\nThe handle of the image.\nThe horizontal alignment of the text\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe opacity of the image.\nThe position of the text relative to the alignment …\nThe rotation to be applied to the image; on its center.\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nIf set to <code>true</code>, the image will be snapped to the pixel …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nThe <code>Checkbox</code> can be interacted with.\nThe theme catalog of a <code>Checkbox</code>.\nA box that can be checked.\nThe item class of the <code>Catalog</code>.\nThe <code>Checkbox</code> cannot be interacted with.\nThe <code>Checkbox</code> can be interacted with and it is being …\nThe icon in a <code>Checkbox</code>.\nThe possible status of a <code>Checkbox</code>.\nThe style of a checkbox.\nA styling function for a <code>Checkbox</code>.\nThe <code>Background</code> of the checkbox.\nThe <code>Border</code> of the checkbox.\nThe unicode code point that will be used as the icon.\nA danger checkbox; denoting a negative toggle.\nThe default class produced by the <code>Catalog</code>.\nFont that will be used to display the <code>code_point</code>,\nThe icon <code>Color</code> of the checkbox.\nThe line height of the icon.\nA primary checkbox; denoting a main toggle.\nA secondary checkbox; denoting a complementary toggle.\nThe shaping strategy of the icon.\nFont size of the content.\nThe <code>Style</code> of a class with the given status.\nA success checkbox; denoting a positive toggle.\nThe text <code>Color</code> of the checkbox.\nThe wrap mode of the icon.\nIndicates if the <code>Checkbox</code> is currently checked.\nIndicates if the <code>Checkbox</code> is currently checked.\nIndicates if the <code>Checkbox</code> is currently checked.\nThe theme catalog of a <code>ComboBox</code>.\nA widget for searching and selecting a single value from a …\nThe local state of a <code>ComboBox</code>.\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nA widget that aligns its contents inside of its boundaries.\nThe appearance of a container.\nA styling function for a <code>Container</code>.\nA <code>Container</code> with the given <code>Background</code>.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nA bordered <code>Container</code> with a background.\nA <code>Container</code> with a dark background and white text.\nThe default class produced by the <code>Catalog</code>.\nDraws the background of a <code>Container</code> given its <code>Style</code> and …\nThe icon <code>Color</code> of the container.\nComputes the layout of a <code>Container</code>.\nA rounded <code>Container</code> with a background.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nA transparent <code>Container</code>.\nProduces a <code>Task</code> that queries the visible screen bounds of …\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nA frame that displays an image while keeping aspect ratio.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA handle pointing to decoded image pixels in RGBA format.\nA frame that displays an image with the ability to zoom …\nDraws an <code>Image</code>\nComputes the layout of an <code>Image</code>.\nZoom and pan on an image.\nCreates a new <code>Viewer</code> with the given image <code>Handle</code>.\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nThe local state of a <code>Viewer</code>.\nA frame that displays an image with the ability to zoom …\nReturns the bounds of the underlying image, given the …\nA container that distributes its contents vertically while …\nKeyed columns distribute content vertically while keeping …\nA container that distributes its contents vertically while …\nAll panes are visible\nA fixed reference line for the measurement of coordinates.\nBottom edge.\nA <code>Pane</code> was picked and then dropped outside of other <code>Pane</code> …\nThe theme catalog of a <code>PaneGrid</code>.\nCenter region.\nThe item class of this <code>Catalog</code>.\nThe arrangement of a <code>PaneGrid</code>.\nThe content of a <code>Pane</code>.\nThe visible contents of the <code>PaneGrid</code>\nThe controls of a <code>Pane</code>.\nA four cardinal direction.\n↓\nAn event produced during a drag and drop interaction of a …\nA pane that can be dragged.\nA <code>Pane</code> was dropped on top of another <code>Pane</code>.\nThe edges of an area.\nAn <code>Edge</code> of the full <code>PaneGrid</code>.\nEdge region.\nThe appearance of a highlight of the <code>PaneGrid</code>.\nThe horizontal axis: —\n←\nLeft edge.\nA line.\nA maximized pane is visible\nA layout node of a <code>PaneGrid</code>.\nA rectangular region in a <code>PaneGrid</code> used to display widgets.\nA <code>Pane</code>.\nThe region of this <code>Node</code> is taken by a <code>Pane</code>.\nA single <code>Pane</code> of the <code>PaneGrid</code>.\nA collection of panes distributed using either vertical or …\nA <code>Pane</code> was picked for dragging.\nThe region of a <code>Pane</code>.\nAn event produced during a resize interaction of a <code>PaneGrid</code>…\n→\nRight edge.\nA divider that splits a region in a <code>PaneGrid</code> into two …\nA split of the available space.\nThe region of this <code>Node</code> is split into two.\nThe state of a <code>PaneGrid</code>.\nThe appearance of a <code>PaneGrid</code>.\nA styling function for a <code>PaneGrid</code>.\nThe <code>Target</code> area a pane can be dropped on.\nThe title bar of a <code>Pane</code>.\nTop edge.\n↑\nThe vertical axis: |\nThe <code>Background</code> of the pane region.\nThe <code>Border</code> of the pane region.\nReturns whether the <code>Draggable</code> with the given <code>Layout</code> can be …\nThe <code>Color</code> of the <code>Line</code>.\nThe default style of a <code>PaneGrid</code>.\nThe default class produced by this <code>Catalog</code>.\nThe appearance of a hovered region highlight.\nThe appearance of a hovered split.\nThe internal state of the <code>PaneGrid</code>.\nThe panes of the <code>PaneGrid</code>.\nThe appearance of a picked split.\nThe new ratio of the <code>Split</code>.\nThe <code>Split</code> that is being dragged for resizing.\nThe state of a <code>PaneGrid</code>.\nThe <code>Style</code> of a class with the given status.\nThe width of the <code>Line</code>.\nThe left/top <code>Configuration</code> of the split.\nThe direction of the split.\nThe right/bottom <code>Configuration</code> of the split.\nThe ratio of the split in [0.0, 1.0].\nThe picked <code>Pane</code>.\nThe picked <code>Pane</code>.\nThe picked <code>Pane</code>.\nThe <code>Target</code> where the picked <code>Pane</code> was dropped on.\nThe left/top <code>Node</code> of the split.\nThe direction of the split.\nThe right/bottom <code>Node</code> of the split.\nThe <code>Split</code> of this <code>Node</code>.\nThe ratio of the split in [0.0, 1.0].\nThe current action of a <code>PaneGrid</code>.\nA <code>Pane</code> in the <code>PaneGrid</code> is being dragged.\nThe <code>PaneGrid</code> is idle.\nThe internal state of a <code>PaneGrid</code>.\nA <code>Split</code> in the <code>PaneGrid</code> is being dragged.\nThe state of a <code>PaneGrid</code>.\nThe internal state of the <code>PaneGrid</code>.\nThe panes of the <code>PaneGrid</code>.\nThe <code>Axis</code> of the <code>Split</code>.\nThe starting <code>Point</code> of the drag interaction.\nThe <code>Pane</code> being dragged.\nThe <code>Split</code> being dragged.\nThe <code>PickList</code> can be interacted with.\nDisplays an arrow icon (▼).\nThe theme catalog of a <code>PickList</code>.\nThe item class of the <code>Catalog</code>.\nA custom dynamic handle.\nThe handle to the right side of the <code>PickList</code>.\nThe <code>PickList</code> is being hovered.\nThe icon of a <code>Handle</code>.\nNo handle will be shown.\nThe <code>PickList</code> is open.\nA widget for selecting a single value from a list of …\nA custom static handle.\nThe possible status of a <code>PickList</code>.\nThe appearance of a pick list.\nA styling function for a <code>PickList</code>.\nThe <code>Background</code> of the pick list.\nThe <code>Border</code> of the pick list.\nThe unicode code point that will be used as the icon.\nThe default style of the field of a <code>PickList</code>.\nThe default class produced by the <code>Catalog</code>.\nFont that will be used to display the <code>code_point</code>,\nThe handle <code>Color</code> of the pick list.\nLine height of the content.\nThe placeholder <code>Color</code> of the pick list.\nThe shaping strategy of the icon.\nFont size of the content.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the pick list.\nThe wrap mode of the icon.\nThe <code>Icon</code> used when <code>PickList</code> is closed.\nThe <code>Icon</code> used when <code>PickList</code> is open.\nFont size of the content.\nThe theme catalog of a <code>ProgressBar</code>.\nThe item class of the <code>Catalog</code>.\nA bar that displays progress.\nThe appearance of a progress bar.\nA styling function for a <code>ProgressBar</code>.\nThe <code>Background</code> of the progress bar.\nThe <code>Background</code> of the bar of the progress bar.\nThe <code>Border</code> of the progress bar.\nThe danger style of a <code>ProgressBar</code>.\nThe default class produced by the <code>Catalog</code>.\nThe primary style of a <code>ProgressBar</code>.\nThe secondary style of a <code>ProgressBar</code>.\nThe <code>Style</code> of a class with the given status.\nThe success style of a <code>ProgressBar</code>.\nThe <code>Radio</code> button can be interacted with.\nThe theme catalog of a <code>Radio</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Radio</code> button is being hovered.\nA circular button representing a choice.\nThe possible status of a <code>Radio</code> button.\nThe appearance of a radio button.\nA styling function for a <code>Radio</code>.\nThe <code>Background</code> of the radio button.\nThe border <code>Color</code> of the radio button.\nThe border width of the radio button.\nThe default style of a <code>Radio</code> button.\nThe default class produced by the <code>Catalog</code>.\nThe <code>Color</code> of the dot of the radio button.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the radio button.\nIndicates whether the <code>Radio</code> button is currently selected.\nIndicates whether the <code>Radio</code> button is currently selected.\nDifferent offset on each end of the rule, length units. …\nThe theme catalog of a <code>Rule</code>.\nThe item class of the <code>Catalog</code>.\nThe fill mode of a rule.\nFill the whole length of the container.\nUniform offset from each end, length units.\nFill a percent of the length of the container. The rule …\nDisplay a horizontal or vertical rule for dividing content.\nThe appearance of a rule.\nA styling function for a <code>Rule</code>.\nThe color of the rule.\nThe default styling of a <code>Rule</code>.\nThe default class produced by the <code>Catalog</code>.\nThe <code>FillMode</code> of the rule.\nThe radius of the line corners.\nThe <code>Style</code> of a class with the given status.\nThe width (thickness) of the rule line.\nThe amount of absolute offset in each direction of a …\nThe <code>Scrollable</code> can be interacted with.\nThe anchor of the scroller of the <code>Scrollable</code> relative to …\nBoth vertical and horizontal scrolling\nThe theme catalog of a <code>Scrollable</code>.\nThe item class of the <code>Catalog</code>.\nThe direction of <code>Scrollable</code>.\nThe <code>Scrollable</code> is being dragged.\nContent is aligned to the end of the <code>Viewport</code>.\nHorizontal scrolling\nThe <code>Scrollable</code> is being hovered.\nThe appearance of the scrollbar of a scrollable.\nThe amount of relative offset in each direction of a …\nA widget that can vertically display an infinite amount of …\nA scrollbar within a <code>Scrollable</code>.\nThe appearance of the scroller of a scrollable.\nScroller is anchoer to the start of the <code>Viewport</code>.\nThe possible status of a <code>Scrollable</code>.\nThe appearance of a scrollable.\nA styling function for a <code>Scrollable</code>.\nVertical scrolling\nThe current <code>Viewport</code> of the <code>Scrollable</code>.\nThe <code>Background</code> of a scrollbar.\nThe <code>Border</code> of a scrollbar.\nThe <code>Border</code> of the scroller.\nThe <code>Color</code> of the scroller.\nThe <code>container::Style</code> of a scrollable.\nThe default style of a <code>Scrollable</code>.\nThe default class produced by the <code>Catalog</code>.\nThe <code>Background</code> of the gap between a horizontal and …\nThe horizontal <code>Rail</code> appearance.\nProduces a <code>Task</code> that scrolls the <code>Scrollable</code> with the given …\nProduces a <code>Task</code> that scrolls the <code>Scrollable</code> with the given …\nThe appearance of the <code>Scroller</code> of a scrollbar.\nProduces a <code>Task</code> that snaps the <code>Scrollable</code> with the given <code>Id</code>\nThe <code>Style</code> of a class with the given status.\nThe vertical <code>Rail</code> appearance.\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nThe properties of the horizontal scrollbar.\nThe properties of the vertical scrollbar.\nIndicates if the horizontal scrollbar is being dragged.\nIndicates if the horizontal scrollbar is being hovered.\nIndicates if the vertical scrollbar is being dragged.\nIndicates if the vertical scrollbar is being hovered.\nThe <code>Slider</code> can be interacted with.\nThe appearance of slider breakpoints.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nStart and end colors of the rail\nThe appearance of a slider rail\nThe background color of the rail\nA rectangular shape.\nAn horizontal bar and a handle that selects a single value …\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nThe <code>Background</code> of the handle.\nThe backgrounds of the rail of the slider.\nThe border of the rail.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe color of the slider breakpoint.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nThe appearance of the <code>Handle</code> of the slider.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe width of the stroke of a slider rail.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nThe theme catalog of an <code>Svg</code>.\nThe item class of the <code>Catalog</code>.\nA handle of Svg data.\nThe <code>Svg</code> is being hovered.\nThe <code>Svg</code> is idle.\nThe possible status of an <code>Svg</code>.\nThe appearance of an <code>Svg</code>.\nA styling function for an <code>Svg</code>.\nA vector graphics image.\nThe <code>Color</code> filter of an <code>Svg</code>.\nThe default class produced by the <code>Catalog</code>.\nThe <code>Style</code> of a class with the given status.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nThe theme catalog of a <code>Text</code>.\nThe item class of this <code>Catalog</code>.\nA fragment of <code>Text</code>.\nWraps at the glyph level.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nA trait for converting a value to some text <code>Fragment</code>.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wrapping.\nOwned data.\nA factor of the size of the text.\nA bunch of <code>Rich</code> text.\nThe settings to configure the <code>Highlighter</code>.\nThe shaping strategy of some text.\nA span of text.\nThe internal state of a <code>Text</code> widget.\nThe appearance of some text.\nA styling function for a <code>Text</code>.\nA bunch of text.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nText with the default base color.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the <code>Span</code>.\nThe <code>Color</code> of the text.\nReturns the current line of the <code>Highlighter</code>.\nText conveying some negative information, like an error.\nThe default text styling; color is inherited.\nThe default class produced by this <code>Catalog</code>.\nDraws text using the same logic as the <code>Text</code> widget.\nThe font of the <code>Span</code>.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlights the given line.\nConverts the value to some text <code>Fragment</code>.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nThe <code>LineHeight</code> of the <code>Span</code>.\nThe link of the <code>Span</code>.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nThe <code>Padding</code> of the <code>Span</code>.\nText conveying some important information, like an action.\nText conveying some secondary information, like a footnote.\nThe size of the <code>Span</code> in <code>Pixels</code>.\nWhether the <code>Span</code> should be struck through or not.\nThe <code>Style</code> of a class with the given status.\nText conveying some positive information, like a …\nThe <code>Fragment</code> of text.\nWhether the <code>Span</code> should be underlined or not.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nAn interaction with an <code>Editor</code>.\nThe <code>TextEditor</code> can be interacted with.\nDelete the previous character.\nDelete the previous character.\nA binding to an action in the <code>TextEditor</code>.\nThe theme catalog of a <code>TextEditor</code>.\nThe item class of the <code>Catalog</code>.\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe content of a <code>TextEditor</code>.\nCopy the selection of the <code>TextEditor</code>.\nProduce the given message.\nCut the selection of the <code>TextEditor</code>.\nDelete the next character.\nDelete the next character.\nThe <code>TextEditor</code> cannot be interacted with.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nMove to the end of the line.\nBreak the current line.\nBreak the current line.\nThe <code>TextEditor</code> is focused.\nMove to the start of the line.\nThe <code>TextEditor</code> is being hovered.\nThe identifier of a <code>TextEditor</code>.\nInsert the given character.\nInsert the given character.\nA key press.\nMove left.\nA cursor movement.\nApply a <code>Motion</code>.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nPaste the clipboard contents in the <code>TextEditor</code>.\nMove right.\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nSelect the word at the current cursor.\nA sequence of bindings to execute.\nThe state of a <code>TextEditor</code>.\nThe possible status of a <code>TextEditor</code>.\nThe appearance of a text input.\nA styling function for a <code>TextEditor</code>.\nA multi-line text input.\nUnfocus the <code>TextEditor</code>.\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe default style of a <code>TextEditor</code>.\nThe default class produced by the <code>Catalog</code>.\nProduces a <code>Task</code> that focuses the <code>TextEditor</code> with the given …\nThe <code>Color</code> of the icon of the text input.\nThe key pressed.\nThe state of the keyboard modifiers.\nThe <code>Color</code> of the placeholder of the text input.\nThe <code>Color</code> of the selection of the text input.\nThe current <code>Status</code> of the <code>TextEditor</code>.\nThe <code>Style</code> of a class with the given status.\nThe text produced by the key press.\nThe <code>Color</code> of the value of the text input.\nThe amount of lines to scroll.\nThe <code>TextInput</code> can be interacted with.\nThe theme catalog of a <code>TextInput</code>.\nThe item class of the <code>Catalog</code>.\nThe cursor of a text input.\nThe default <code>Padding</code> of a <code>TextInput</code>.\nThe <code>TextInput</code> cannot be interacted with.\nThe <code>TextInput</code> is focused.\nThe <code>TextInput</code> is being hovered.\nThe content of the <code>Icon</code>.\nThe identifier of a <code>TextInput</code>.\nThe left side of a <code>TextInput</code>.\nThe right side of a <code>TextInput</code>.\nThe side of a <code>TextInput</code>.\nThe state of a <code>TextInput</code>.\nThe possible status of a <code>TextInput</code>.\nThe appearance of a text input.\nA styling function for a <code>TextInput</code>.\nA field that can be filled with text.\nThe value of a <code>TextInput</code>.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe unicode code point that will be used as the icon.\nTrack the cursor of a text input.\nThe default style of a <code>TextInput</code>.\nThe default class produced by the <code>Catalog</code>.\nProduces a <code>Task</code> that focuses the <code>TextInput</code> with the given …\nThe font that will be used to display the <code>code_point</code>.\nThe <code>Color</code> of the icon of the text input.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nThe <code>Color</code> of the placeholder of the text input.\nProduces a <code>Task</code> that selects all the content of the …\nThe <code>Color</code> of the selection of the text input.\nThe side of a <code>TextInput</code> where to display the <code>Icon</code>.\nThe font size of the content.\nThe spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.\nThe <code>Style</code> of a class with the given status.\nThe <code>Color</code> of the value of the text input.\nThe cursor of a text input.\nCursor without a selection\nCursor selecting a range of text\nThe state of a <code>Cursor</code>.\nThe end of the selection\nThe start of the selection\nThe <code>Toggler</code> can be interacted with.\nThe theme catalog of a <code>Toggler</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Toggler</code> is disabled.\nThe <code>Toggler</code> is being hovered.\nThe possible status of a <code>Toggler</code>.\nThe appearance of a toggler.\nA styling function for a <code>Toggler</code>.\nA toggler widget.\nThe background <code>Color</code> of the toggler.\nThe <code>Color</code> of the background border of the toggler.\nThe width of the background border of the toggler.\nThe border radius of the toggler.\nThe default style of a <code>Toggler</code>.\nThe default class produced by the <code>Catalog</code>.\nThe foreground <code>Color</code> of the toggler.\nThe <code>Color</code> of the foreground border of the toggler.\nThe width of the foreground border of the toggler.\nthe space between the handle and the border of the toggler\nthe radius of the handle of the toggler\nThe <code>Style</code> of a class with the given status.\nIndicates whether the <code>Toggler</code> is toggled.\nIndicates whether the <code>Toggler</code> is toggled.\nThe tooltip will appear on the bottom of the widget.\nThe tooltip will follow the cursor.\nThe tooltip will appear on the left of the widget.\nThe position of the tooltip. Defaults to following the …\nThe tooltip will appear on the right of the widget.\nAn element to display a widget over another.\nThe tooltip will appear on the top of the widget.\nThe <code>Slider</code> can be interacted with.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nStart and end colors of the rail\nThe background color of the rail\nA rectangular shape.\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nAn vertical bar and a handle that selects a single value …\nThe <code>Background</code> of the handle.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nThe appearance of the <code>Handle</code> of the slider.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nAn operation to be performed on some window.\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nRedraw at the given time.\nThe window is completely centered on the screen.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nThe user has requested for the window to close.\nA window was closed.\nPlatform-specific\nThe platform-specific default position for a new window.\nDisable window blur.\nDisable mouse passthrough for the given window.\nMove the window with the left mouse button until the …\nEnable window blur.\nEnables mouse passthrough for the given window.\nA window-related event.\nA file has been dropped into the window.\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nA window was focused.\nThe application takes the whole screen of its current …\nBring the window to the front and sets input focus. Has no …\nGets the <code>Id</code> of the latest window.\nGet if the current window is maximized or not.\nGet if the current window is minimized or not.\nGet the current <code>Mode</code> of the window.\nGets the <code>Id</code> of the oldest window.\nGet the current logical coordinates of the window.\nGet the raw identifier unique to the window.\nGet the current scale factor (DPI) of the window.\nGet the current logical dimensions of the window.\nThe application is hidden\nAn window icon normally used for the titlebar or taskbar.\nThe id of the window.\nPlatform-specific\nA window level groups windows with respect to their …\nSet the window to maximized or back\nSet the window to minimized or back\nThe mode of a window-based application.\nMove the window to the given logical coordinates.\nA window was moved.\nNo window will match this Id\nRedraw the next frame.\nThe default behavior.\nOpens a new window with some <code>Settings</code>.\nA window was opened.\nThe platform specific window settings of an application.\nThe position of a window in a given screen.\nA request to redraw a window.\nA window redraw was requested.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nA window was resized.\nRuns the closure with the native window handle of the …\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nThe window settings of an application.\nShow the system menu at cursor position.\nThe window is positioned with specific coordinates: <code>(X, Y)</code>.\nLike <code>Specific</code>, but the window is positioned with the …\nToggle whether window has decorations.\nToggle the window to maximized or back\nA window was unfocused.\nThe type of user attention to request.\nThe application appears in its own window.\nSets the application id of the window.\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nSubscribes to all <code>Event::CloseRequested</code> occurrences in the …\nCrops a <code>Screenshot</code> to the provided <code>region</code>. This will …\nWhether the window should have a border, a title bar, etc. …\nDisable the blur effect for a window.\nDisable mouse passthrough for the given window.\nBegins dragging the window while the left mouse button is …\nEnable the blur effect for a window.\nEnables mouse passthrough for the given window.\nSubscribes to all window events of the running application.\nWhether the window will close when the user requests it, …\nSubscribes to the frames of the window of the running …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBrings the window to the front and sets input focus. Has …\nGets the window <code>Id</code> of the latest window.\nGets the maximized state of the window with the given <code>Id</code>.\nGets the minimized state of the window with the given <code>Id</code>.\nGets the current <code>Mode</code> of the window.\nGets the window <code>Id</code> of the oldest window.\nGets the position in logical coordinates of the window …\nGets an identifier unique to the window, provided by the …\nGets the scale factor of the window with the given <code>Id</code>.\nGet the window’s size in logical dimensions.\nAttach an icon to the window of your application.\nThe icon of the window.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the raw data of the <code>Icon</code>.\nThe window <code>Level</code>.\nThe maximum size of the window.\nMaximizes the window.\nThe minimum size of the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nCreates a new <code>Screenshot</code>.\nOpens a new window with the given <code>Settings</code>; producing the …\nSubscribes to all <code>Event::Opened</code> occurrences in the running …\nWhether bypass the window manager mapping for x11 windows\nPlatform specific settings.\nThe initial position of the window.\nRequest user attention to the window. This has no effect …\nWhether the window should be resizable or not.\nResizes the window to the given logical dimensions.\nThe border area for the drag resize handle.\nSubscribes to all <code>Event::Resized</code> occurrences in the …\nRuns the given callback with the native window handle for …\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nTake screenshots of a window.\nCaptures a <code>Screenshot</code> from the window.\nConfigure your windows.\nShow the system menu at cursor position.\nThe size of the <code>Screenshot</code> in physical pixels.\nThe initial logical dimensions of the window.\nToggles the window decorations.\nToggles the window to maximized or back.\nWhether the window should be transparent.\nCreates a new unique window <code>Id</code>.\nWhether the window should be visible or not.\nThe position of the opened window. This is relative to the …\nThe size of the created window. This is its “inner” …\nAn error produced when creating an <code>Icon</code>.\nAn window icon normally used for the titlebar or taskbar.\nThe <code>Icon</code> is not valid.\nThe underlying OS failed to create the icon.\nReturns the argument unchanged.\nBuilds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …\nCalls <code>U::from(self)</code>.\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nCreate an Android-based display handle.\nCreate an AppKit-based display handle.\nGet the underlying raw display handle.\nGet the underlying raw window handle.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nCreate a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.\nBorrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gbm device.\nThe gbm surface.\nCreate an Haiku-based display handle.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new empty display handle.\nCreate a new handle to an <code>ANativeWindow</code>.\nCreate a new empty display handle.\nCreate a new handle to a view.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new empty display handle.\nCreate a new handle to an <code>OHNativeWindow</code> on OpenHarmony.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new empty display handle.\nCreate a new handle to a view.\nCreate a new handle to a display.\nCreate a new handle to a window.\nCreate a new handle to a connection and screen.\nCreate a new handle to a window.\nCreate a new display handle.\nCreate a new handle to a surface.\nCreate a new handle to a file descriptor.\nCreate a new handle to a plane.\nCreate a new handle to a device.\nCreate a new handle to a surface.\nCreate a new empty display handle.\nCreate a new handle to a canvas element.\nCreate a new handle from a pointer to <code>HtmlCanvasElement</code>.\nCreate a new handle from a pointer to an <code>OffscreenCanvas</code>.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new handle to a window.\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nCreate an OpenHarmony-based display handle.\nCreate an Orbital-based display handle.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nCreate a UiKit-based display handle.\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nCreate a Web-based display handle.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nCreate a Windows-based display handle.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nThe size of the <code>Screenshot</code> in physical pixels.\nThe platform specific window settings of an application.\nThe window settings of an application.\nSets the application id of the window.\nWhether the window should have a border, a title bar, etc. …\nWhether the window will close when the user requests it, …\nThe icon of the window.\nThe window <code>Level</code>.\nThe maximum size of the window.\nThe minimum size of the window.\nWhether bypass the window manager mapping for x11 windows\nPlatform specific settings.\nThe initial position of the window.\nWhether the window should be resizable or not.\nThe border area for the drag resize handle.\nThe initial logical dimensions of the window.\nWhether the window should be transparent.\nWhether the window should be visible or not.\nAn Accesskit event for a specific Accesskit Node in an …\nAlignment on the axis of a container.\nThe background of some element.\nA border.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nAlign at the center of the axis.\nA buffer for short-term storage and transfer within and …\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nDegrees\nA DnD event.\nThe built-in Dracula variant.\nA generic <code>Widget</code>.\nAlign at the end of the axis.\nA user interface event.\nThe built-in Ferra variant:\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe hasher used to compare layouts.\nA raster image that can be drawn.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA keyboard event\nThe bounds of a <code>Node</code> and its children, using absolute …\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA linear gradient interpolates colors along a direction at …\nThe built-in Moonfly variant.\nA mouse event\nThe built-in Nightfly variant.\nDon’t resize or scale the image at all.\nThe built-in Nord variant.\nAn interactive component that can be displayed on top of …\nThe built-in Oxocarbon variant.\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nPlatform specific events\nA 2D point.\nRadians\nAn axis-aligned rectangle.\nA component that can be used by widgets to draw themselves …\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nA shadow.\nA connection to the state of a shell.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nA <code>SmolStr</code> is a string type that has the following …\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe element will be solid while rotating. The layout will …\nAlign at the start of the axis.\nA raster image that can be drawn.\nA paragraph.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nA touch event\nA 2D transformation matrix.\nA 2D vector.\nA component that displays information and allows …\nA window event\nTransparency, 0.0 - 1.0\nAlign and position widgets.\nReturns whether the widgets of the current application …\nReturns a reference to the <code>Widget</code> of the <code>Element</code>,\nReturns a mutable reference to the <code>Widget</code> of the <code>Element</code>,\nBlue component, 0.0 - 1.0\nThe blur radius of the shadow.\nDraw lines around containers.\nSets the border radius of the <code>Svg</code>\nThe border radii of the image\nThe border radius for the svg\nBottom padding\nReturns the bounds of the <code>Layout</code>.\nThe bounds of the paragraph.\nReturns an iterator over the <code>Layout</code> of the children of a …\nClears all of the recorded primitives in the <code>Renderer</code>.\nAccess the clipboard.\nSets the <code>Color</code> filter of the <code>Svg</code>.\nThe color of the border.\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nThe content of the paragraph.\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds recording a new layer.\nEnds recording a new layer.\nHandle events of a user interface.\nMarks the <code>Element</code> as <em>to-be-explained</em>.\nThe <code>Family</code> of the <code>Font</code>.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nSets the filter method of the <code>Image</code>.\nThe filter method of the image.\nLoad and use fonts.\nThe font of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nThe handle of the image.\nThe handle of the <code>Svg</code>.\nHeight of the rectangle.\nThe height.\nThe horizontal alignment of the <code>Text</code>.\nWidget and Window IDs.\nLoad and draw raster graphics.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidates the current application layout.\nInvalidates the current application widgets.\nReturns true if the <code>Shell</code> contains no published messages\nReturns whether the current layout is invalid or not.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nListen to keyboard events.\nPosition your widgets properly.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nLeft padding\nThe line height of the <code>Text</code>.\nApplies a transformation to the produced message of the …\nMerges the current <code>Shell</code> with another one by applying the …\nHandle mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nCreates a new <code>Element</code> containing the given <code>Widget</code>.\nCreates a new <code>Image</code> with the given handle.\nCreates a new <code>Layout</code> for the given <code>Node</code> at the origin.\nCreates a new <code>Svg</code> with the given handle.\nCreates a new <code>Shell</code> with the provided buffer of messages.\nConstructs inline variant of <code>SmolStr</code>.\nConstructs a <code>SmolStr</code> from a statically allocated string.\nThe offset of the shadow.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nSets the opacity of the <code>Image</code>.\nSets the opacity of the <code>Svg</code>.\nThe opacity of the image.\nThe opacity of the <code>Svg</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nDisplay interactive elements on top of other widgets.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nSpace stuff around the perimeter.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nReturns the position of the <code>Layout</code>.\nPublish the given <code>Message</code> for an application to process it.\nRed component, 0.0 - 1.0\nThe <code>Radius</code> of the border.\nReads the current content of the <code>Clipboard</code> as text.\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nReturns the request a redraw should happen, if any.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nWrite your own renderer.\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequest window size\nRequests a new frame to be drawn.\nTriggers the given function if the layout is invalid, …\nRight padding\nSets the rotation of the <code>Image</code>.\nSets the rotation of the <code>Svg</code>.\nThe rotation to be applied to the image; on its center.\nThe rotation to be applied to the image; on its center.\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe size of the <code>Text</code> in logical pixels.\nSets whether the <code>Image</code> should be snapped to the pixel grid.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nLoad and draw vector graphics.\nDraw and interact with text.\nUse the built-in theme and styles.\nKeep track of time, both in native and web platforms!\nTop padding\nBuild touch events.\nThe vertical alignment of the <code>Text</code>.\nThe virtual offset of the layout. May represent the scroll …\nThe <code>Weight</code> of the <code>Font</code>.\nCreate custom widgets and operate on them.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nBuild window-based GUI applications.\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nCreates a new <code>Layout</code> for the given <code>Node</code> with the provided …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nReturns a new layout with the virtual offset\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA border.\nThe border radii for the corners of a graphics primitive …\nCreates a new <code>Radius</code> with the given value as bottom left …\nCreates a new <code>Radius</code> with the given bottom left value.\nBottom left radius\nCreates a new <code>Radius</code> with the given bottom right value.\nBottom right radius\nCreates a new <code>Border</code> with the given <code>Color</code>.\nThe color of the border.\nCreates a new <code>Radius</code> with the given value as top left and …\nCreates a new <code>Radius</code> with the same value for each corner.\nThe <code>Radius</code> of the border.\nCreates a new <code>Radius</code> with the given value as top right and …\nCreates a new <code>Border</code> with the given <code>Radius</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nCreates a new <code>Radius</code> with the given top left value.\nTop left radius\nCreates a new <code>Radius</code> with the given top right value.\nTop right radius\nCreates a new <code>Border</code> with the given <code>width</code>.\nThe width of the border.\nA buffer for short-term storage and transfer within and …\nA list of DnD destination rectangles.\nSource of a DnD operation.\nThe kind of <code>Clipboard</code>.\nA null implementation of the <code>Clipboard</code> trait.\nThe primary clipboard.\nThe standard clipboard.\nA surface is the source of the DnD operation.\nA widget is the source of the DnD operation.\nAppends the list of DnD destination rectangles to the …\nDowncast <code>element</code> to concrete type <code>Element&lt;(), T, R&gt;</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the list of DnD destination rectangles. This …\nCreates a new <code>DndDestinationRectangles</code>.\nReads the current content of the primary <code>Clipboard</code>.\nPushes a new rectangle to the list of DnD destination …\nReads the current content of the <code>Clipboard</code> as text.\nReads the current content of the <code>Clipboard</code>.\nReads the current content of the primary <code>Clipboard</code>.\nStarts a DnD operation. icon surface is a tuple of the …\nCreates a new <code>DndDestinationRectangles</code> with the given …\nWrites the given text contents to the <code>Clipboard</code>.\nAn Accesskit event for a specific Accesskit Node in an …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nA mouse event\nA platform specific event\nPlatform specific events\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nGlyphs in cursive fonts generally use a more informal …\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> gradient with the given angle in …\nOffset along the gradient vector.\nScales the alpha channel of the <code>Linear</code> gradient by the …\n<code>ColorStop</code>s along the linear gradient path.\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nget window node id that won’t conflict with other node …\nA cheaply cloneable and sliceable chunk of contiguous …\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nThe unique identifier of some <code>Handle</code> data.\nA raster image that can be drawn.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA <code>Renderer</code> that can render raster graphics.\nA handle pointing to decoded image pixels in RGBA format.\nThe border radii of the image\nClears the buffer, removing all data.\nCreates <code>Bytes</code> instance from slice, by copying it.\nDraws an image with the given <code>Handle</code> and inside the …\nThe filter method of the image.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate Bytes with a buffer whose lifetime is controlled …\nCreates a new <code>Bytes</code> from a static slice.\nThe handle of the image.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if this is the only reference to the data and …\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the dimensions of an image for the given <code>Handle</code>.\nCreates a new empty <code>Bytes</code>.\nThe opacity of the image.\nThe rotation to be applied to the image; on its center.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nIf set to <code>true</code>, the image will be snapped to the pixel …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nShortens the buffer, keeping the first <code>len</code> bytes and …\nTry to convert self into <code>BytesMut</code>.\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nIdentify keyboard keys.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nFound on Sun’s USB keyboard.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n↓\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n←\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n→\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\n↑\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nUsed to remove the character to the left of the cursor. …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nSome laptops place this key to the left of the ↑ key.\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nSome laptops place this key to the right of the ↑ key.\nGo to the user’s preferred home page. (…\nThe “home” button on Android.\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nCapsLock or ⇪\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nCode representing the location of a physical key.\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe application context menu key, which is typically found …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nConvert the current input method sequence.\nJapanese: 変 (henkan)\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nFound on Sun’s USB keyboard.\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nFound on Sun’s USB keyboard.\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\n⌦. The forward delete key. Note that on Apple keyboards, …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nEject or ⏏. This key is placed in the function section …\nThe End key, used with keyboard entry to go to the end of …\nPage Down, End, or ↘\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nEnter or ↵. Labeled Return on Apple keyboards.\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nEsc or ⎋\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFound on Sun’s USB keyboard.\nThe Function switch <code>Fn</code> key. Activating this key …\nFn This is typically a hardware key that does not generate …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nHelp. Not present on standard PC keyboards.\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nHome or ↖\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nInsert or Ins. Not present on Apple keyboards.\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kanji (Japanese name for ideographic characters of …\nThe Katakana (Japanese Kana characters) key.\nUse for dedicated カタカナ key found on some Japanese …\nA key on the keyboard.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nA named key.\nA key with an established name.\nContains the platform-native physical key identifier.\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nAccept current input method sequence without conversion in …\nJapanese: 無変換 (muhenkan)\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nFound on Sun’s USB keyboard.\nScroll down or display next page of content.\nPage Down, PgDn, or ⇟\nScroll up or display previous page of content.\nPage Up, PgUp, or ⇞\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nFound on Sun’s USB keyboard.\nPause the current state or application (as appropriate).\nPause Break\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThis key is placed in the function section on some Apple …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nInitiate print-screen function.\nPrtScr SysRq or Print Screen\nThe properties (Props) key.\nFound on Sun’s USB keyboard.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nToggle between scrolling and cursor movement modes.\nScroll Lock\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\nUsed in text to insert a space between words. Usually …\n  (space)\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nThe Horizontal Tabulation <code>Tab</code> key.\nTab or ⇥\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nFound on Sun’s USB keyboard.\nAn unidentified key.\nAn unidentified code.\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA Windows “scancode”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe bounds of a <code>Node</code> and its children, using absolute …\nA set of size constraints for layouting.\nThe bounds of an element and its children.\nAligns the <code>Node</code> in the given space.\nMutable reference version of <code>Self::align</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nReturns the bounds of the <code>Node</code>.\nReturns the children of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nCreates a new <code>Node</code> that wraps a single child with some …\nDistribute elements using a flex-based layout.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMoves the <code>Node</code> to the given position.\nMutable reference version of <code>Self::move_to</code>.\nCreates a new <code>Node</code> with the given <code>Size</code>.\nProduces a <code>Node</code> with two children nodes one right next to …\nComputes the <code>Node</code> that fits the <code>Limits</code> given some width, …\nComputes a <code>padded</code> <code>Node</code> with a positioning step.\nReturns the <code>Size</code> of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nTranslates the <code>Node</code> by the given translation.\nTranslates the <code>Node</code> by the given translation.\nCreates a new <code>Node</code> with the given <code>Size</code> and children.\nThe main axis of a flex layout.\nThe horizontal axis\nThe vertical axis\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes the flex layout with the given axis and limits, …\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nA mouse click.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nTrack mouse clicks.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>Kind</code> of <code>Click</code>.\nCreates a new <code>Click</code> with the given position and previous …\nReturns the position of the <code>Click</code>.\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA mouse click.\nA double click\nThe kind of mouse click.\nA single click\nA triple click\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA generic <code>Overlay</code>.\nAn <code>Overlay</code> container that displays multiple overlay …\nAn interactive component that can be displayed on top of …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Element</code> and its children using the given <code>Layout</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>Group</code> of overlay <code>Element</code> children.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the cursor is over the <code>Element</code>.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nComputes the layout of the <code>Element</code> in the given bounds.\nApplies a transformation to the produced message of the …\nReturns the current <code>mouse::Interaction</code> of the <code>Element</code>.\nCreates a new <code>Element</code> containing the given <code>Overlay</code>.\nCreates an empty <code>Group</code>.\nProcesses a runtime <code>Event</code>.\nApplies a <code>widget::Operation</code> to the <code>Element</code>.\nReturns the nested overlay of the <code>Element</code>, if there is any.\nTurns the <code>Group</code> into an overlay <code>overlay::Element</code>.\nAdds an <code>overlay::Element</code> to the <code>Group</code>.\nCreates a <code>Group</code> with the given elements.\nAn amount of space to pad for each side of a box\nCreate a <code>Padding</code> that is equal on all sides.\nCreate some bottom <code>Padding</code>.\nBottom padding\nCreate some left <code>Padding</code>.\nLeft padding\nCreate some right <code>Padding</code>.\nRight padding\nCreate some top <code>Padding</code>.\nTop padding\nA polygon with four sides.\nA component that can be used by widgets to draw themselves …\nThe styling attributes of a <code>Renderer</code>.\nThe <code>Border</code> of the <code>Quad</code>. The border is drawn on the inside …\nThe bounds of the <code>Quad</code>.\nClears all of the recorded primitives in the <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe color to apply to symbolic icons.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe scale factor\nThe <code>Shadow</code> of the <code>Quad</code>.\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe text color\nIn-memory data\nThe data of a vectorial image.\nA handle of Svg data.\nFile data\nA <code>Renderer</code> that can render vector graphics.\nA raster image that can be drawn.\nThe border radius for the svg\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nDraws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …\nReturns the argument unchanged.\nThe handle of the <code>Svg</code>.\nCalls <code>U::from(self)</code>.\nReturns the default dimensions of an SVG for the given …\nThe opacity of the <code>Svg</code>.\nThe rotation to be applied to the image; on its center.\nThe <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nA bounds difference.\nThe <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.\nThe point was within the bounds of the returned character …\nThe difference detected in some text.\nA component that can be used by widgets to edit multi-line …\nThe <code>Editor</code> of this <code>Renderer</code>.\nThe font of the <code>Editor</code>.\nThe font of this <code>Paragraph</code>.\nThe font type used.\nA fragment of <code>Text</code>.\nWraps at the glyph level.\nA text highlight.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe result of hit testing on text.\nThe icon font of the backend.\nA trait for converting a value to some text <code>Fragment</code>.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wrapping.\nNo difference.\nOwned data.\nA text paragraph.\nThe <code>Paragraph</code> of this <code>Renderer</code>.\nThe Raw of this <code>Renderer</code>.\nA factor of the size of the text.\nA renderer capable of measuring and drawing <code>Text</code>.\nThe settings to configure the <code>Highlighter</code>.\nA shape difference.\nThe shaping strategy of some text.\nA span of text.\nA paragraph.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nSets the <code>Background</code> of the <code>Span</code>.\nThe <code>Background</code> of the highlight.\nSets the <code>Background</code> of the <code>Span</code>, if any.\nSets the <code>Border</code> of the <code>Span</code>.\nThe <code>Border</code> of the highlight.\nSets the <code>Border</code> of the <code>Span</code>, if any.\nReturns the current boundaries of the <code>Editor</code>.\nThe bounds of the paragraph.\nNotifies the <code>Highlighter</code> that the line at the given index …\nSets the <code>Color</code> of the <code>Span</code>.\nThe <code>Color</code> of the <code>Span</code>.\nSets the <code>Color</code> of the <code>Span</code>, if any.\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nThe content of the paragraph.\nReturns the current line of the <code>Highlighter</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nComputes the cursor position of the <code>Hit</code> .\nReturns the current cursor position of the <code>Editor</code>.\nReturns the default <code>Self::Font</code>.\nReturns the default size of <code>Text</code>.\nEdit text.\nDraws the given <code>Editor</code> at the given position and with the …\nDraws the given <code>Paragraph</code> at the given position and with …\nDraws the given Raw\nDraws the given <code>Text</code> at the given position and with the …\nSets the font of the <code>Span</code>.\nThe font of the <code>Text</code>.\nThe font of the <code>Span</code>.\nSets the font of the <code>Span</code>, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the distance to the given grapheme index in the …\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlights the given line.\nHighlight text.\nTests whether the provided point is within the boundaries …\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nThe horizontal alignment of the <code>Text</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the value to some text <code>Fragment</code>.\nReturns true if the <code>Editor</code> has no contents.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nSets the <code>LineHeight</code> of the <code>Span</code>.\nThe line height of the <code>Text</code>.\nThe <code>LineHeight</code> of the <code>Span</code>.\nSets the link of the <code>Span</code>.\nThe link of the <code>Span</code>.\nSets the link of the <code>Span</code>, if any.\nReturns the minimum boundaries to fit the current contents …\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum height that can fit the contents of …\nReturns the minimum height that can fit the contents of …\nReturns the minimum height that can fit the contents of …")