searchState.loadedDescShard("cosmic", 12, "A font’s raw data originating from a shared file mapping.\nA font source.\nA face width.\nAllows italic or oblique faces to be selected.\nSpecifies the weight of glyphs in the font, their degree …\nA list of family names.\nA prioritized list of font family names or generic family …\nAn unique ID.\nA face index in the <code>source</code>.\nIndicates that the font face is monospaced.\nA PostScript name.\nA font source.\nA font face stretch.\nSelects a normal, condensed, or expanded face from a font …\nA font face style.\nAllows italic or oblique faces to be selected.\nA font face weight.\nSpecifies the weight of glyphs in the font, their degree …\nText is set vertically from bottom to top.\nA cluster level.\nFlags for buffers.\nDefines the direction in which text is to be read.\nA font face handle.\nA feature tag with an accompanying range specifying on …\nA buffer that contains the results of the shaping process.\nA glyph info.\nHolds the positions of the glyph in both horizontal and …\nInitial, unset direction.\nA script language.\nText is set horizontally from left to right.\nText is set horizontally from right to left.\nA text script.\nFlags used for serialization with a <code>BufferSerializer</code>.\nA reusable plan for shaping a text buffer.\nText is set vertically from top to bottom.\nA buffer that contains an input string ready for shaping.\nA font variation.\nAn index to the start of the grapheme cluster in the …\nA selected glyph.\nPredefined scripts.\nShapes the buffer content using provided font and features.\nShapes the buffer content using the provided font and plan.\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the X-axis before drawing it, …\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the Y-axis before drawing it, …\nA grayscale bitmap with 2 bits per pixel.\nA packed grayscale bitmap with 2 bits per pixel.\nA grayscale bitmap with 4 bits per pixel.\nA packed grayscale bitmap with 4 bits per pixel.\nA grayscale bitmap with 8 bits per pixel.\nA monochrome bitmap.\nA packed monochrome bitmap.\nA color bitmap with 32 bits per pixel.\nA list of errors that can occur during a CFF glyph …\nA font face.\nThe face index is larger than the number of faces in the …\nA list of font face parsing errors.\nParsed face tables.\nA 32-bit signed fixed-point number (16.16).\nA trait for parsing raw binary data of fixed size.\nA type-safe wrapper for glyph ID.\nA form that is generally cursive in nature.\nA <code>Name</code> language.\nA slice-like container that converts internal binary data …\nA slice-like container that converts internal binary data …\nAn iterator over <code>LazyArray16</code>.\nAn iterator over <code>LazyArray32</code>.\nA line metrics.\nAn attempt to read out of bounds detected.\nThe <code>head</code> table is missing or malformed.\nThe <code>hhea</code> table is missing or malformed.\nThe <code>maxp</code> table is missing or malformed.\nA face that is neither italic not obliqued.\nA variation coordinate in a normalized coordinate system.\nA typically-sloped version of the regular face.\nA trait for glyph outline construction.\nFace permissions.\nA platform ID.\nA glyph’s raster image.\nA glyph raster image format.\nA raw font face.\nA list of all supported tables as raw data.\nA rectangle.\nA rectangle described by the left-lower and upper-right …\nA RGBA color in the sRGB color space.\nObject’s raw data size.\nA script metrics used by subscript and superscript.\nA face style.\nA raw table record.\nA 4-byte tag.\nAn affine transform.\nUnicode Ranges.\nFace data must start with <code>0x00010000</code>, <code>0x74727565</code>, …\nA font variation value.\nA variation axis.\nA face weight.\nA face width.\nThe ‘a’ component of the transform.\nAn Anchor Point Table implementation.\nThis module contains Apple Advanced Typography Layout …\nAn Axis Variations Table implementation.\nAn axis tag name.\nThe ‘b’ component of the transform.\nThe ‘c’ component of the transform.\nA Color Bitmap Data Table implementation.\nA Color Bitmap Location Table implementation.\nA Compact Font Format Table implementation.\nA Compact Font Format 2 Table implementation.\nAppends a ClosePath segment.\nA Character to Glyph Index Mapping Table implementation.\nA Color Table implementation.\nA Color Palette Table implementation.\nAppends a CurveTo segment.\nThe ‘d’ component of the transform.\nA raw image data. It’s up to the caller to decode it.\nThe input font file data.\nThe ‘e’ component of the transform.\nThe ‘f’ component of the transform.\nA Feature Name Table implementation.\nReturns the number of fonts stored in a TrueType font …\nAn image format.\nA Font Variations Table implementation.\nA Glyph Definition Table implementation.\nA Glyph Data Table implementation.\nA Glyph Positioning Table implementation.\nA Glyph Substitution Table implementation.\nA Glyph Variations Table implementation.\nA Font Header Table implementation.\nImage height.\nA Horizontal Header Table implementation.\nA Horizontal/Vertical Metrics Table implementation.\nA Horizontal/Vertical Metrics Variations Table …\nA Kerning Table implementation.\nAn Extended Kerning Table implementation.\nAppends a LineTo segment.\nAn Index to Location Table implementation.\nA Math Table implementation.\nA Maximum Profile Table implementation.\nAn Extended Glyph Metamorphosis Table implementation.\nAppends a MoveTo segment.\nA Metrics Variations Table implementation.\nA Naming Table implementation.\nA list of name ID’s.\nAn axis name in the <code>name</code> table.\nThis module contains OpenType Layout supplementary tables …\nA OS/2 and Windows Metrics Table implementation.\nParses an object from a raw data.\nA pixels per em of the selected strike.\nLine position.\nA PostScript Table implementation.\nAppends a QuadTo segment.\nA Standard Bitmap Graphics Table implementation.\nAn SVG Table implementation.\nAn array of table records.\nLine thickness.\nA Tracking Table implementation.\nAn axis value.\nA Vertical Header Table implementation.\nA Vertical Origin Table implementation.\nImage width.\nHorizontal offset.\nThe horizontal maximum of the rect.\nThe horizontal minimum of the rect.\nX offset.\nHorizontal face size.\nVertical offset.\nThe vertical maximum of the rect.\nThe vertical minimum of the rect.\nY offset.\nVertical face size.\nAn anchor point.\nAn Anchor Point Table.\nAn Extended State Table.\nA State Table entry.\nA lookup table.\nA legacy state entry used by StateTable.\nA State Table.\nA type-safe wrapper for a kerning value offset.\nPredefined classes.\nAdditional data.\nAdditional data.\nEntry flags.\nEntry flags.\nA new state.\nA new state.\nPredefined states.\nAn axis value map.\nA list of segment maps.\nAn iterator over maps.\nAn Axis Variations Table.\nA normalized coordinate value obtained using default …\nThe segment maps array — one segment map for each axis …\nThe modified, normalized coordinate value.\nA Color Bitmap Data Table.\nA Color Bitmap Location Table.\nAn affine transformation matrix.\nA Compact Font Format Table.\nA Compact Font Format 2 Table.\nA character encoding subtable variant.\nGlyph was found in the variation encoding table.\nA result of a variation glyph mapping.\nA character encoding subtable.\nA format 0 subtable.\nA format 10 subtable.\nA format 12 subtable.\nA format 13 subtable.\nA format 14 subtable.\nA format 2 subtable.\nA format 4 subtable.\nA format 6 subtable.\nA list of subtables.\nAn iterator over <code>Subtables</code>.\nA Character to Glyph Index Mapping Table.\nGlyph should be looked in other, non-variation tables.\nSubtable encoding.\nFirst character code covered.\nFirst character code of subrange.\nA subtable format.\nJust a list of 256 8bit glyph IDs.\nArray of glyph indices for the character codes covered.\nArray of glyph indexes for character codes in the range.\nSubtable platform.\nA list of subtables.\nThe composite mode ‘Clear’.\nA ClipBox.\nThe composite mode ‘Color’.\nThe composite mode ‘ColorBurn’.\nThe composite mode ‘ColorDodge’.\nA gradient extend.\nA composite mode\nThe composite mode ‘Darken’.\nThe composite mode ‘Destination’.\nThe composite mode ‘DestinationAtop’.\nThe composite mode ‘DestinationIn’.\nThe composite mode ‘DestinationOut’.\nThe composite mode ‘DestinationOver’.\nThe composite mode ‘Difference’.\nThe composite mode ‘Exclusion’.\nA gradient extend.\nAn iterator over stops of a gradient.\nThe composite mode ‘HardLight’.\nThe composite mode ‘Hue’.\nThe composite mode ‘Lighten’.\nA linear gradient\nA paint with a linear gradient.\nThe composite mode ‘Luminosity’.\nThe composite mode ‘Multiply’.\nThe composite mode ‘Overlay’.\nThe <code>Pad</code> gradient extend mode.\nA paint.\nA trait for color glyph painting.\nThe composite mode ‘Plus’.\nA radial gradient\nA paint with a radial gradient.\nThe <code>Reflect</code> gradient extend mode.\nThe <code>Repeat</code> gradient extend mode.\nThe composite mode ‘Saturation’.\nThe composite mode ‘Screen’.\nThe composite mode ‘SoftLight’.\nA paint with a solid color.\nThe composite mode ‘Source’.\nThe composite mode ‘SourceAtop’.\nThe composite mode ‘SourceIn’.\nThe composite mode ‘SourceOut’.\nThe composite mode ‘SourceOver’.\nA sweep gradient\nA paint with a sweep gradient.\nA Color Table.\nThe composite mode ‘Xor’.\nThe x of the center.\nThe y of the center.\nThe color of the color stop.\nThe end angle.\nThe extend.\nThe extend.\nThe extend.\nOutline a glyph and store it.\nPaint the stored outline using the provided color.\nPop the last clip path.\nPop the last layer.\nPop the last transform.\nPush a new clip path using the currently stored outline.\nPush a new clip path using the clip box.\nPush a new layer with the given composite mode.\nPush a rotation transform.\nPush a scaling transform.\nPush a skewing transform.\nPush a transform.\nPush a translation transform.\nThe <code>r0</code> value.\nThe <code>r1</code> value.\nThe start angle.\nThe offset of the color stop.\nThe <code>x0</code> value.\nThe <code>x0</code> value.\nThe <code>x1</code> value.\nThe <code>x1</code> value.\nThe <code>x2</code> value.\nThe horizontal maximum of the rect.\nThe horizontal minimum of the rect.\nThe <code>y0</code> value.\nThe <code>y0</code> value.\nThe <code>y1</code> value.\nThe <code>y1</code> value.\nThe <code>y2</code> value.\nThe vertical maximum of the rect.\nThe vertical minimum of the rect.\nA Color Palette Table.\nA feature names.\nA list fo feature names.\nAn iterator over <code>FeatureNames</code>.\nA setting name.\nA Feature Name Table.\nThe index of the default setting in the <code>setting_names</code>.\nThe feature’s exclusive settings. If set, the feature …\nThe feature’s ID.\nThe <code>name</code> table index for the feature’s name in a …\nThe <code>name</code> table index for the feature’s name in a …\nA list of feature names. Sorted by <code>FeatureName.feature</code>.\nThe setting.\nThe feature’s setting names.\nA Font Variations Table.\nA variation axis.\nA list of variation axes.\nAn axis name in the <code>name</code> table.\nA glyph class.\nA Glyph Definition Table.\nA Glyph Data Table.\nAn Anchor Table.\nAn <code>Anchor</code> parsing helper.\nA <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.\nA Cursive Attachment Positioning Subtable.\nA list of entry and exit <code>Anchor</code> pairs.\nA Device Table.\nA Device Table hinting values.\nAn array or ligature anchor matrices.\nA Mark Array.\nA Mark-to-Base Attachment Positioning Subtable.\nA Mark-to-Ligature Attachment Positioning Subtable.\nA Mark-to-Mark Attachment Positioning Subtable.\nA Pair Adjustment Positioning Subtable.\nA <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.\nA list of <code>PairSet</code>s.\nA glyph positioning lookup subtable enumeration.\nA Single Adjustment Positioning Subtable.\nA Value Record.\nAn array of Value Records.\nA Device Table indexes into Item Variation Store.\nAn anchors matrix.\nA base coverage.\nNumber of columns in the matrix.\nA mark coverage.\nA list of mark anchors.\nNumber of rows in the matrix.\nHorizontal value, in design units.\nHorizontal adjustment for advance, in design units — …\nA <code>Device</code> table with horizontal adjustment for advance.\nA <code>Device</code> table with horizontal value.\nHorizontal adjustment for placement, in design units.\nA <code>Device</code> table with horizontal adjustment for placement.\nVertical value, in design units.\nVertical adjustment for advance, in design units — only …\nA <code>Device</code> table with vertical adjustment for advance.\nA <code>Device</code> table with vertical value.\nVertical adjustment for placement, in design units.\nA <code>Device</code> table with vertical adjustment for placement.\nA list of glyphs for Alternate Substitution Subtable.\nA set of <code>AlternateSet</code>.\nA Alternate Substitution Subtable.\nGlyph components for one ligature.\nA <code>Ligature</code> set.\nA list of <code>Ligature</code> sets.\nA Ligature Substitution Subtable.\nA Multiple Substitution Subtable.\nA Reverse Chaining Contextual Single Substitution Subtable.\nA sequence of glyphs for Multiple Substitution Subtable.\nA list of <code>Sequence</code> tables.\nA Single Substitution Subtable.\nA glyph substitution lookup subtable enumeration.\nArray of alternate glyph IDs, in arbitrary order.\nGlyph components for one ligature.\nLigature to substitute.\nA list of substitute glyphs.\nA Glyph Variations Table.\nAn index format used by the Index to Location Table.\nA Font Header Table.\nA bounding box that large enough to enclose any glyph from …\nAn index format used by the Index to Location Table.\nUnits per EM.\nA Horizontal Header Table.\nFace ascender.\nFace descender.\nFace line gap.\nNumber of metrics in the <code>hmtx</code> table.\nHorizontal/Vertical Metrics.\nA Horizontal/Vertical Metrics Table.\nWidth/Height advance for <code>hmtx</code>/<code>vmtx</code>.\nSide bearings for glyph IDs greater than or equal to the …\nA list of metrics indexed by glyph ID.\nSum of long metrics + bearings.\nLeft/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.\nA Horizontal/Vertical Metrics Variations Table.\nA kerning subtable format.\nA kerning pair.\nA kerning subtable.\nA format 0 subtable.\nA format 2 subtable.\nA format 3 subtable.\nA list of subtables.\nAn iterator over kerning subtables.\nA Kerning Table.\nSubtable format.\nIndicates that subtable has a cross-stream values.\nIndicates that subtable uses a state machine.\nIndicates that subtable is for horizontal text.\nGlyphs pair.\nA list of kerning pairs.\nA list of subtables.\nKerning value.\nIndicates that subtable is variable.\nA container of Anchor Points used by <code>Subtable4</code>.\nA state machine entry.\nAn extended kerning subtable format.\nA kerning subtable.\nA format 0 subtable.\nA format 1 subtable.\nA format 2 subtable.\nA format 4 subtable.\nA format 6 subtable.\nA list of extended kerning subtables.\nAn iterator over extended kerning subtables.\nAn Extended Kerning Table.\nAn action index.\nAnchor points.\nSubtable format.\nIndicates that subtable has a cross-stream values.\nIndicates that subtable uses a state machine.\nIndicates that subtable is for horizontal text.\nA list of kerning pairs.\nA state table.\nA state table.\nA list of subtables.\nThe tuple count.\nIndicates that subtable is variable.\nLong offsets.\nShort offsets.\nAn Index to Location Table.\nA Math Constants Table.\nA Glyph Assembly Table.\nA Math Glyph Construction Table.\nA mapping from glyphs to Math Glyph Construction Tables.\nA Math Glyph Info Table.\nDetails for a glyph part in an assembly.\nDescription of math glyph variants.\nA Math Kern Table.\nAn entry in a Math Kern Info Table.\nA Math Kern Info Table.\nA Math Value with optional device corrections.\nA mapping from glyphs to Math Values.\nGlyph part flags.\nA Math Table.\nA Math Variants Table.\nAdvance width/height, in design units, of the variant …\nA general recipe on how to construct a variant with large …\nThe kerning data for the bottom-left corner.\nThe kerning data for the bottom-right corner.\nMath positioning constants.\nDevice corrections for this value.\nLengths of the connectors on the end of the glyph, in font …\nGlyphs which are <em>extended shapes</em>.\nThe full advance of the part, in font design units.\nGlyph ID for the part.\nPer-glyph positioning information.\nConstructions for shapes growing in the horizontal …\nPer-glyph italics correction values.\nThe italics correction of the assembled glyph.\nPer-glyph information for mathematical kerning.\nMinimum overlap of connecting glyphs during glyph …\nPart flags.\nParts the assembly is composed of.\nLengths of the connectors on the start of the glyph, in …\nPer-glyph horizontal positions for attaching mathematical …\nThe kerning data for the top-left corner.\nThe kerning data for the top-right corner.\nThe X or Y value in font design units.\nThe ID of the variant glyph.\nPrepared variants of the glyph with varying advances.\nVariants and assembly recipes for growable glyphs.\nConstructions for shapes growing in the vertical direction.\nA Maximum Profile Table.\nThe total number of glyphs in the face.\nA metamorphosis chain.\nA list of metamorphosis chains.\nAn iterator over metamorphosis chains.\nA contextual subtable state table trailing data.\nA contextual subtable.\nA subtable coverage.\nThe feature table is used to compute the sub-feature flags …\nA contextual subtable state table trailing data.\nAn insertion subtable.\nA ligature subtable.\nA subtable in a metamorphosis chain.\nA subtable kind.\nA list of subtables in a metamorphosis chain.\nAn iterator over a metamorphosis chain subtables.\nAn Extended Glyph Metamorphosis Table.\nA list of metamorphosis chains.\nLigature components.\nA subtable coverage.\nA current index.\nA current insert index.\nDefault chain features.\nComplement of flags for the settings that this feature and …\nFlags for the settings that this feature and setting …\nSubtable feature flags.\nA list of chain features.\nInsertion glyphs.\nThe type of feature.\nA subtable kind.\nLigature actions.\nLigatures.\nA mark index.\nA marked insert index.\nThe feature’s setting (aka selector).\nThe contextual glyph substitution state table.\nA state table.\nA state table.\nA list of chain subtables.\nA Metrics Variations Table.\nA Name Record.\nA list of face names.\nAn iterator over face names.\nA platform ID.\nA Naming Table.\nA platform-specific encoding ID.\nA language ID.\nA raw name data.\nA Name ID.\nA list of names.\nA platform ID.\nA Chained Contextual Lookup Subtable.\nA Chained Sequence Rule.\nA set of <code>ChainedSequenceRule</code>.\nA list of <code>ChainedSequenceRule</code> sets.\nA value of Class Definition Table.\nA Class Definition Table.\nA Contextual Lookup Subtable.\nA Coverage Table.\nA Feature.\nAn index in <code>FeatureList</code>.\nA list of <code>Feature</code> records.\nA Feature Variations Table.\nSimple glyph contexts.\nSimple glyph contexts.\nClass-based glyph contexts.\nClass-based glyph contexts.\nCoverage-based glyph contexts.\nCoverage-based glyph contexts.\nAn index in <code>LanguageSystemList</code>.\nA Language System Table.\nA list of <code>LanguageSystem</code> records.\nA Layout Table.\nA Lookup Table.\nLookup table flags.\nAn index in <code>LookupList</code>.\nA list of <code>Lookup</code> values.\nA trait for parsing Lookup subtables.\nA list of lookup subtables.\nAn iterator over lookup subtables.\nA record that describes a range of glyph IDs.\nA data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …\nA trait to parse item in <code>RecordList</code>.\nAn iterator over <code>RecordList</code> values.\nA Script Table.\nAn index in <code>ScriptList</code>.\nA list of <code>Script</code> records.\nA sequence rule record.\nA sequence rule.\nA set of <code>SequenceRule</code>s.\nA list of <code>SequenceRuleSet</code>s.\nAn index in <code>FeatureVariations</code>.\nContains either glyph IDs or glyph Classes.\nDefault language.\nLast glyph ID in the range\nArray of indices into the FeatureList, in arbitrary order.\nA list of all supported features.\nLookup qualifiers.\nList of supported languages, excluding the default one. …\nContains either glyph IDs or glyph Classes.\nA list of all lookups.\nIndex into GDEF mark glyph sets structure.\nParses raw data.\nParses raw data.\nIndex of a feature required for this language system.\nA list of all supported scripts.\nFirst glyph ID in the range\nAvailable subtables.\nScript tag.\nLanguage tag.\nCoverage Index of first glyph ID in range.\nUsed to substitute an alternate set of lookup tables to …\nArray of glyph IDs. Sorted.\nArray of glyph ranges. Ordered by <code>RangeRecord.start</code>.\nA form that is generally cursive in nature.\nA face that is neither italic not obliqued.\nA typically-sloped version of the regular face.\nFace permissions.\nA script metrics used by subscript and superscript.\nA face style.\nA OS/2 and Windows Metrics Table.\nUnicode Ranges.\nA face weight.\nA face width.\nTable version.\nX offset.\nHorizontal face size.\nY offset.\nVertical face size.\nAn iterator over glyph names.\nA PostScript Table.\nFlag that indicates that the font is monospaced.\nItalic angle in counter-clockwise degrees from the …\nUnderline metrics.\nA strike of glyphs.\nA list of <code>Strike</code>s.\nAn iterator over <code>Strikes</code>.\nA Standard Bitmap Graphics Table.\nThe pixels per EM size for which this strike was designed.\nThe device pixel density (in PPI) for which this strike …\nA list of <code>Strike</code>s.\nAn SVG documents.\nA list of SVG documents.\nAn iterator over <code>SvgDocumentsList</code> values.\nAn SVG Table.\nThe SVG document data.\nA list of SVG documents.\nThe last glyph ID, <em>inclusive</em>, for the range covered by …\nThe first glyph ID for the range covered by this record.\nA Tracking Table.\nA single track.\nA track data.\nA list of tracks.\nAn iterator over <code>Tracks</code>.\nHorizontal track data.\nThe <code>name</code> table index for the track’s name.\nA list of sizes.\nA list of tracks.\nA track value.\nA list of tracking values for each size.\nVertical track data.\nA Vertical Header Table.\nFace ascender.\nFace descender.\nFace line gap.\nNumber of metrics in the <code>vmtx</code> table.\nA Vertical Origin Table.\nVertical origin metrics for the Vertical Origin Table.\nDefault origin.\nGlyph ID.\nA list of metrics for each glyph.\nY coordinate, in the font’s design coordinate system, of …\nA multi-line text editor.\nA weak reference to an <code>Editor</code>.\nThe bounds of the <code>Editor</code>.\nA bunch of text.\nA weak reference to a <code>Paragraph</code>.\nThe horizontal alignment of the <code>Paragraph</code>.\nThe minimum bounds of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Paragraph</code>.\nThe appearance of a program.\nThe default style of a <code>Program</code>.\nThe <code>Executor</code> that will run commands and subscriptions.\nThe data needed to initialize your <code>Program</code>.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nAn interactive, native, cross-platform, multi-windowed …\nThe graphics backend to use to draw the <code>Program</code>.\nThe state of a multi-windowed <code>Program</code>.\nThe theme used to draw the <code>Program</code>.\nReturns the current background <code>Color</code> of the <code>State</code>.\nThe background <code>iced_core::Color</code> of the application.\nBuild the user interface for every window.\nReturns the current cursor position of the <code>State</code>.\nThe default <code>Appearance</code> of a <code>Program</code> with the built-in …\nReturns the default style of a <code>Program</code>.\nReturns the argument unchanged.\nReturns the current icon <code>Color</code> of the <code>State</code>.\nThe default icon <code>iced_core::Color</code> of the application.\nCalls <code>U::from(self)</code>.\nReturns the logical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.\nReturns the current keyboard modifiers of the <code>State</code>.\nInitializes the <code>Program</code> with the flags provided to <code>run</code> as …\nCreates a new <code>State</code> for the provided <code>Program</code>’s <code>window</code>.\nReturns the physical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.\nRuns a <code>Program</code> with an executor, compositor, and the …\nReturns the current scale factor of the <code>Viewport</code> of the …\nReturns the scale factor of the window of the <code>Program</code>.\nReturns the <code>Style</code> variation of the <code>Theme</code>.\nReturns the event <code>Subscription</code> for the current state of the\nSynchronizes the <code>State</code> with its <code>Program</code> and its respective …\nReturns the current text <code>Color</code> of the <code>State</code>.\nThe default text <code>iced_core::Color</code> of the application.\nReturns the current <code>Theme</code> of the <code>Program</code>.\nReturns the current theme of the <code>State</code>.\nReturns the current title of the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nProcesses the provided window event and updates the <code>State</code> …\nReturns true if the provided event should cause a <code>Program</code> …\nReturns the widgets to display in the <code>Program</code> for the …\nReturns the current <code>Viewport</code> of the <code>State</code>.\nReturns the version of the <code>Viewport</code> of the <code>State</code>.\nAn action that the iced runtime can perform.\nThe appearance of a program.\nRun a clipboard action.\nThe default style of a <code>Program</code>.\nRun a Dnd action.\nExits the runtime.\nLoad a font from its bytes.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nOutput some value.\nRun a platform specific action\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nRun a system action.\nA set of concurrent actions to be performed by the iced …\nThe theme used to draw the <code>Program</code>.\nA set of interactive graphical elements with a specific …\nRun a widget operation.\nRun a window action.\nThe background <code>iced_core::Color</code> of the application.\nAccess the clipboard.\nThe default <code>Appearance</code> of a <code>Program</code> with the built-in …\nReturns the default style of a <code>Program</code>.\nAccess the clipboard.\nCreates a <code>Task</code> that exits the iced runtime.\nLoad and use fonts.\nThe default icon <code>iced_core::Color</code> of the application.\nTrack keyboard events.\nA multi-window application.\nOverlays for user interfaces.\nPlatform specific actions defined for wayland\nBuild interactive programs using The Elm Architecture.\nAccess the native system.\nCreate runtime tasks.\nThe default text <code>iced_core::Color</code> of the application.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nImplement your own event loop to drive a user interface.\nReturns the widgets to display in the <code>Program</code>.\nBuild window-based GUI applications.\nThe bytes of the font to load.\nThe channel to send back the load result.\nA clipboard action to be performed by some <code>Task</code>.\nRead the clipboard and produce <code>String</code> with the result.\nRead the clipboard and produce <code>T</code> with the result.\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the primary clipboard.\nRead from the primary clipboard\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nWrite the given contents to the primary clipboard.\nWrite the given contents to the clipboard.\nThe channel to send the read contents.\nThe contents to be written.\nThe clipboard target.\nThe clipboard target.\nAn action to be performed on the system.\nEnd a Dnd operation.\nPeek the current Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nEnd a Dnd operation.\nRead the current contents of the Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nThe rectangles to register.\nThe surface to register.\nAn error while loading a font.\nLoad a font from its bytes.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a multi-window <code>Program</code>. It …\nThe theme used to draw the <code>Program</code>.\nBuild interactive programs using The Elm Architecture.\nThe internal state of a multi-window <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe execution state of a multi-window <code>Program</code>. It …\nAn overlay container that displays nested overlays\nPlatform specific actions defined for wayland\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a <code>Program</code>. It leverages caching, …\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code>.\nAn operation to be performed on the system.\nContains information about the system (e.g. system name, …\nQuery system information and produce <code>T</code> with the result.\nDetailed processor model information\nThe number of physical cores on the processor\nModel information for the active graphics adapter\nUnderlying graphics backend for rendering\nTotal RAM size, in bytes\nMemory used by this process, in bytes\nOperating system kernel version\nThe operating system name\nShort operating system version number\nLong operating system version\nA handle to a <code>Task</code> that can be used for aborting it.\nA set of concurrent actions to be performed by the iced …\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that executes the given <code>Action</code> and …\nReturns the underlying <code>Stream</code> of the <code>Task</code>.\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that runs the given <code>widget::Operation</code> …\nReusable data of a specific <code>UserInterface</code>.\nThe <code>UserInterface</code> is outdated and needs to be rebuilt.\nThe resulting state after updating a <code>UserInterface</code>.\nThe <code>UserInterface</code> is up-to-date and can be reused without …\nA set of interactive graphical elements with a specific …\nThe <code>window::RedrawRequest</code> when a redraw should be …\nAn operation to be performed on some window.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nDisable window blur.\nDisable mouse passthrough for the given window.\nMove the window with the left mouse button until the …\nEnable window blur.\nEnables mouse passthrough for the given window.\nBring the window to the front and sets input focus. Has no …\nGets the <code>Id</code> of the latest window.\nGet if the current window is maximized or not.\nGet if the current window is minimized or not.\nGet the current <code>Mode</code> of the window.\nGets the <code>Id</code> of the oldest window.\nGet the current logical coordinates of the window.\nGet the raw identifier unique to the window.\nGet the current scale factor (DPI) of the window.\nGet the current logical dimensions of the window.\nSet the window to maximized or back\nSet the window to minimized or back\nMove the window to the given logical coordinates.\nOpens a new window with some <code>Settings</code>.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nRuns the closure with the native window handle of the …\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nShow the system menu at cursor position.\nToggle whether window has decorations.\nToggle the window to maximized or back\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nSubscribes to all <code>Event::CloseRequested</code> occurrences in the …\nDisable the blur effect for a window.\nDisable mouse passthrough for the given window.\nBegins dragging the window while the left mouse button is …\nEnable the blur effect for a window.\nEnables mouse passthrough for the given window.\nSubscribes to all window events of the running application.\nSubscribes to the frames of the window of the running …\nBrings the window to the front and sets input focus. Has …\nGets the window <code>Id</code> of the latest window.\nGets the maximized state of the window with the given <code>Id</code>.\nGets the minimized state of the window with the given <code>Id</code>.\nGets the current <code>Mode</code> of the window.\nGets the window <code>Id</code> of the oldest window.\nGets the position in logical coordinates of the window …\nGets an identifier unique to the window, provided by the …\nGets the scale factor of the window with the given <code>Id</code>.\nGet the window’s size in logical dimensions.\nMaximizes the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nOpens a new window with the given <code>Settings</code>; producing the …\nSubscribes to all <code>Event::Opened</code> occurrences in the running …\nRequest user attention to the window. This has no effect …\nResizes the window to the given logical dimensions.\nSubscribes to all <code>Event::Resized</code> occurrences in the …\nRuns the given callback with the native window handle for …\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nTake screenshots of a window.\nCaptures a <code>Screenshot</code> from the window.\nShow the system menu at cursor position.\nThe size of the <code>Screenshot</code> in physical pixels.\nToggles the window decorations.\nToggles the window to maximized or back.\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nThe gbm device.\nThe gbm surface.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nThe size of the <code>Screenshot</code> in physical pixels.\nThe settings of an application.\nThe fonts to load on boot.\nThe identifier of the application.\nWhether the application should exit when no windows are …\nEnd user application handling.\nThe event enums and assorted supporting types.\nThe <code>EventLoop</code> struct and assorted supporting types, …\nTypes related to the keyboard.\nTypes useful for interacting with a user’s monitors.\nContains traits with platform-specific methods in them.\nThe <code>Window</code> struct and associated types.\nThe handler of the application events.\nEmitted when the event loop is about to block and wait for …\nEmitted from the point onwards the application should …\nEmitted when the application must destroy its render …\nEmitted when the OS sends an event to a device.\nEmitted when the event loop is being shut down.\nEmitted when the application has received a memory warning.\nEmitted when new events arrive from the OS to be processed.\nCalled after a wake up is requested using …\nEmitted when the application has been resumed.\nEmitted when the application has been suspended.\nEmitted when the OS sends an event to a winit window.\nA position represented in logical pixels.\nA size represented in logical pixels.\nA logical pixel unit.\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a maximum physical unit that is equal to …\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nRepresents a minimum physical unit of <code>f64::MAX</code>.\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nA position represented in physical pixels.\nA size represented in physical pixels.\nA physical pixel unit.\nA pixel unit that’s either physical or logical.\nA position that’s either physical or logical.\nA size that’s either physical or logical.\nRepresents a logical unit of <code>0_f64</code>.\nRepresents a physical unit of <code>0_f64</code>.\nRepresents a logical unit of <code>0_f64</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks that the scale factor is a normal positive <code>f64</code>.\nA general error that may occur while running or creating …\nApplication has exit with an error status.\nThe request was ignored by the operating system.\nCreating the event loop with the requested configuration …\nThe request is not supported.\nThe requested operation is not supported.\nGot unspecified OS-specific error during the request.\nGot unspecified OS specific error during the request.\nUnclassified error from the OS.\nThe event loop can’t be re-created.\nA general error that may occur during a request to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>ApplicationHandler::about_to_wait</code> for details.\nThe activation token was delivered back and now could be …\nIdentifier for a specific analog axis on some device.\nIdentifier for a specific button on some device.\nOn iOS, the force is calibrated so that the same number …\nThe window has been requested to close.\nNotifies when text should be inserted into the editor …\nSee <code>ApplicationHandler::can_create_surfaces</code> for details.\nThe cursor has entered the window.\nThe cursor has left the window.\nThe cursor has moved on the window.\nThe window has been destroyed.\nRepresents raw hardware events that are not associated …\nSee <code>ApplicationHandler::device_event</code> for details.\nIdentifier of an input device.\nNotifies when the IME was disabled.\nDouble tap gesture.\nA file has been dropped into the window.\nDescribes the input state of a key.\nNotifies when the IME was enabled.\nDescribes a generic event.\nIdentifier of a finger in a touch event.\nThe window gained or lost focus.\nDescribes the force of a touch event\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nDescribes input method events.\nAn event from an input method.\nSent once, immediately after <code>run</code> is called. Indicates that …\nDescribes a keyboard input targeting a window.\nAn event from the keyboard has been received.\nAmount in lines or rows to scroll in the horizontal and …\nSee <code>ApplicationHandler::exiting</code> for details.\nSee <code>ApplicationHandler::memory_warning</code> for details.\nDescribes keyboard modifiers event.\nThe keyboard modifiers have changed.\nDescribes a button of a mouse controller.\nAn mouse button press has been received.\nChange in physical position of a pointing device.\nDescribes a difference in the mouse scroll wheel state.\nA mouse wheel movement or touchpad scroll occurred.\nPhysical scroll event\nThe position of the window has changed. Contains the window…\nSee <code>ApplicationHandler::new_events</code> for details.\nIf the platform reports the force as normalized, we have …\nThe window has been occluded (completely hidden from view).\nN-finger pan gesture\nTwo-finger pinch gesture, often used for magnification.\nAmount in pixels to scroll in the horizontal and vertical …\nSent if the event loop is being resumed after the loop’s …\nNotifies when a new composing text should be set at the …\nDescribes a keyboard input as a raw device event.\nEmitted when a window should be redrawn.\nSent if the time specified by <code>ControlFlow::WaitUntil</code> has …\nSee <code>ApplicationHandler::resumed</code> for details.\nTwo-finger rotation gesture.\nThe window’s scale factor has changed.\nDescribes the reason the event loop is resuming.\nThe suggested bounds of the window’s surface has changed.\nThe size of the window’s surface has changed.\nHandle to synchronously change the size of the window from …\nSee <code>ApplicationHandler::suspended</code> for details.\nThe system window theme has changed.\nRepresents a touch event\nTouch event has been received\nDescribes touch-screen input state.\nTouchpad pressure event.\nUser requested a wake up.\nSent if the OS has new events to send to the window, after …\nDescribes an event from a [<code>Window</code>].\nSee <code>ApplicationHandler::window_event</code> for details.\nReturns a dummy id, useful for unit testing.\nReturns a dummy id, useful for unit testing.\nUnique identifier of a finger.\nDescribes how hard the screen was pressed. May be <code>None</code> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if <code>self == Pressed</code>.\nThe state of the left alt key.\nThe state of the left control key.\nContains the location of this key on the keyboard.\nThis value is affected by all modifiers except Ctrl.\nThe state of the left shift key.\nThe state of the left super key.\nReturns the force normalized to the range between 0.0 and …\nRepresents the position of a key independent of the …\nThe state of the right alt key.\nThe state of the right control key.\nWhether or not this key is a key repeat event.\nTry to request surface size which will be set …\nThe state of the right shift key.\nThe state of the right super key.\nThe state of the modifiers.\nWhether the key is being pressed or released.\nContains the text produced by this keypress.\n(x, y) change in position in unspecified units.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nPositive values indicate magnification (zooming in) and  …\nChange in pixels of pan gesture from last update.\nchange in rotation in degrees\nIf <code>true</code>, the event was generated synthetically by winit in …\n(x,y) coords in pixels relative to the top-left corner of …\nHandle to update surface size during scale changes.\nReport device events regardless of window focus.\nA unique identifier of the winit’s async request.\nSet through <code>ActiveEventLoop::set_control_flow()</code>.\nControl when device events are captured.\nProvides a way to retrieve events from the system and from …\nObject that allows building the event loop.\nControl the <code>EventLoop</code>, possibly from a different thread, …\nNever capture device events.\nA proxy for the underlying display handle.\nWhen the current loop iteration finishes, immediately …\nWhen the current loop iteration finishes, suspend the …\nWhen the current loop iteration finishes, suspend the …\nOnly capture device events while the window is focused.\nGet the underlying EventLoop’s <code>fd</code> which you can register …\nGet the underlying EventLoop’s raw <code>fd</code> which you can …\nReturns the list of all the monitors available on the …\nBuilds a new event loop.\nStart building a new event loop.\nGets the current <code>ControlFlow</code>.\nCreate custom cursor.\nCreate custom cursor.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreate the window.\nThis exits the event loop.\nReturns if the <code>EventLoop</code> is about to stop.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange if or when <code>DeviceEvent</code>s are captured.\nChange if or when <code>DeviceEvent</code>s are captured.\nCreate the event loop.\nGets a persistent reference to the underlying platform …\nGets a persistent reference to the underlying platform …\nReturns the primary monitor of the system.\nRun the application with the event loop on the calling …\nGet the raw-window-handle handle.\nSets the <code>ControlFlow</code>.\nSets the <code>ControlFlow</code>.\nReturns the current system theme.\nCreates a <code>ControlFlow</code> that waits until a timeout has …\nWake up the <code>EventLoop</code>, resulting in …\nThe “alt” key.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe “control” key.\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nCode representing the location of a physical key\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nThe location of the key on the keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nThe key is on the left side of the keyboard.\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nThe state of the particular modifiers key.\nRepresents the current state of the keyboard modifiers\nA simple (unparameterised) action\nA <code>Key::Named</code> value\nContains the platform-native logical key identifier\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nThe key is on the numpad.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nThe particular key is pressed.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe key is on the right side of the keyboard.\nThe Roman characters function key.\nThe “shift” key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nThis is the “windows” key on PC and “command” key …\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nA <code>SmolStr</code> is a string type that has the following …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe key is in its “normal” location on the keyboard.\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nThe state of the key is unknown.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA “key value string”.\nA Windows “scancode”.\nA Windows “virtual-key code”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nAn XKB “keysym”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nGet a flags value with all known bits set.\nReturns <code>true</code> if the alt key is pressed.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the control key is pressed.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns <code>true</code> if the shift key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns <code>true</code> if the super key is pressed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConvert an action to its approximate textual equivalent.\nConvert a key to its approximate textual equivalent.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHandle to a monitor.\nDescribes a fullscreen video mode of a monitor.\nReturns the bit depth of this video mode, as in how many …\nReturns the currently active video mode of this monitor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that this video mode is valid for. …\nReturns a human-readable name of the monitor.\nReturns the top-left corner position of the monitor …\nReturns the refresh rate of this video mode in mHz.\nReturns the scale factor of the underlying monitor. To map …\nReturns the resolution of this video mode. This <strong>must not</strong> …\nReturns all fullscreen video modes supported by this …\nWindow startup notification to handle window raising.\nWayland\nX11\nAdditional methods for the <code>KeyEvent</code> which cannot be …\nThis value ignores all modifiers including, but not …\nIdentical to <code>KeyEvent::text</code> but this is affected by Ctrl.\nContinue running external loop.\nAdditional methods on <code>EventLoop</code> for pumping events within …\nExit external loop.\nThe return status for <code>pump_events</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPump the <code>EventLoop</code> to check for and dispatch pending …\nAdditional methods on <code>EventLoop</code> to return control flow to …\nRun the application with the event loop on the calling …\nAdditional methods for the <code>PhysicalKey</code> type that allow the …\nConstructs a <code>PhysicalKey</code> from a platform-specific physical …\nThe raw value of the platform-specific physical key …\nRead the token from the environment.\nRequest a new activation token.\nRemove the activation environment variables from the …\nSet environment variables responsible for activation token.\nUse this <code>ActivationToken</code> during window creation.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nUse the dark variant.\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to …\nUse the light variant.\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThe theme variant to use.\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to Wayland.\nGet the underlying raw xdg_surface handle.\nCreate a <code>XdgSurfaceHandle</code> from a <code>NonNull&lt;c_void&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses Wayland.\nTrue if the <code>EventLoop</code> uses Wayland.\nReturns the inner identifier of the monitor.\nWhether to allow the event loop to be created off of the …\nBuild window with the given name.\nForce using Wayland.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nThis should be used on the windows that are popped up by …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nA dropdown menu that usually appears when the user clicks …\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to X11.\nPinnable menu windows. “Torn off” from the main …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThis is a normal, top-level window.\nThe window is a notification. This property is typically …\nA popup menu that usually appears when the user right …\nThe window is a splash screen displayed as an application …\nToolbar windows. “Torn off” from the main application.\nA tooltip window. Usually used to show additional …\nA small persistent utility window, such as a palette or …\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to X11.\nX window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.\nA unique identifier for an X11 visual.\nA unique identifier for an X11 window.\nThe first argument in the provided hook will be the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses X11.\nTrue if the <code>EventLoop</code> uses X11.\nReturns the inner identifier of the monitor.\nHook to winit’s xlib error handling callback.\nWhether to allow the event loop to be created off of the …\nBuild window with base size hint.\nEmbed this window into another parent window.\nBuild window with the given <code>general</code> and <code>instance</code> names.\nBuild window with override-redirect flag; defaults to …\nForce using X11.\nCreate this window with a specific X11 visual.\nBuild window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …\nAn opaque token used to activate the <code>Window</code>.\nIndicates an alias of/shortcut to something is to be …\nIndicates that something can be moved or resized in any …\nIndicates that the something can be scrolled in any …\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nAn error produced when using <code>CustomCursor::from_rgba</code> with …\nProviding <code>None</code> to <code>Borderless</code> will fullscreen on the …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the length of the <code>rgba</code> argument isn’t …\nIndicates that a cell or set of cells may be selected. …\nIndicates that the item/column can be resized …\nThe cursor is confined to the window area.\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nPlatform-specific\nA simple crosshair (e.g., short line segments resembling a …\nSee <code>Window::set_cursor()</code> for more details.\nThe behavior of cursor grabbing.\nDescribes the appearance of the (usually mouse) cursor …\nAn error which could be returned when parsing <code>CursorIcon</code>.\nUse a custom image as a cursor (mouse pointer).\nSource for <code>CustomCursor</code>.\nUse the dark variant.\nThe platform-dependent default cursor. Often rendered as …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nIndicates that the user will select the action that will …\nThe east border to be moved.\nThe east and west borders to be moved.\nFullscreen modes.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nProduced when the hotspot is outside the image bounds\nAn icon used for the window titlebar, taskbar, etc.\nGeneric IME purposes for use in <code>Window::set_ime_purpose</code>.\nPlatform-specific\nUse the light variant.\nThe cursor is locked inside the window area to the certain …\nThe maximum width and height for a cursor when using …\nIndicates something is to be moved.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nNo grabbing of the cursor is performed.\nThe default.\nNo special hints for the IME (default).\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nProduced when underlying OS functionality failed to create …\nThe IME is used for password input.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nDefines the orientation that a window resize will be …\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe south-east corner to be moved.\nThe south-west corner to be moved.\nThe IME is used to input into a terminal.\nIndicates text that may be selected. Often rendered as an …\nThe theme variant to use.\nProduced when the image dimensions are larger than …\nPlatform-specific\nIndicates vertical-text that may be selected. Often …\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nRepresents a window.\nAttributes used when creating a window.\nIdentifier of a window. Unique for each window.\nA window level groups windows with respect to their …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nGet a flags value with all known bits set.\nA list of alternative names for the cursor icon as …\nReturns the list of all the monitors available on the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns the monitor on which the window currently resides.\nCreate a new <code>WindowAttributes</code> which allows modifying the …\nThe intersection of a source flags value with the …\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nReturns a dummy id, useful for unit testing.\nGet a flags value with all bits unset.\nGets the enabled window buttons.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nBrings the window to the front and sets input focus. Has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates a new cursor from an rgba buffer.\nCreates an icon from 32bpp RGBA data.\nParse a string slice into <code>CursorIcon</code>.\nGets the window’s current fullscreen state.\nGets whether the window has keyboard focus.\nReturns an identifier unique to the window.\nReturns the position of the top-left hand corner of the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nGets the window’s current decorations state.\nWhether all bits in this flags value are unset.\nGets the window’s current maximized state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe name of the cursor icon as defined in the w3c standard.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the position of the top-left hand corner of the …\nReturns the size of the entire window.\nGet the parent window stored on the attributes.\nNotify the windowing system before presenting to the …\nReturns the primary monitor of the system.\nThe intersection of a source flags value with the …\nQueues a <code>WindowEvent::RedrawRequested</code> event to be emitted …\nRequest the new size for the surface.\nRequests user attention to the window, this has no effect …\nReset the dead key state of the keyboard.\nGet the raw-window-handle v0.6 display handle.\nGet the raw-window-handle v0.6 window handle.\nReturns the scale factor that can be used to map logical …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nChange the window blur state.\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSet grabbing mode on the cursor preventing it from leaving …\nModifies whether the window catches cursor events.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nSets the enabled window buttons.\nSets the window to fullscreen or back.\nSets whether the window should get IME events\nSet the IME cursor editing area, where the <code>position</code> is the …\nSets the IME purpose for the window using <code>ImePurpose</code>.\nSets a maximum dimensions of the window’s surface.\nSets the window to maximized or back.\nSets a minimum dimensions of the window’s surface.\nSets the window to minimized or back\nModifies the position of the window.\nSets whether the window is resizable or not.\nSets resize increments of the surface.\nSet or override the window theme.\nModifies the title of the window.\nChange the window transparency state.\nModifies the window’s visibility.\nSets the window icon.\nChange the window level.\nShow window menu at a specified position .\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns surface resize increments if any were set.\nReturns the size of the window’s render-able surface.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current window theme.\nGets the current title of the window.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet whether the window will support transparency.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nSets the maximum dimensions the surface can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions the surface can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nRequests the surface to be of specific dimensions.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.\nThe fallback icon theme to search if no icon theme was …\nSet the fallback icon theme to search when loading system …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a type that you can apply arbitrary functions …\nRepresents a type which can have functions applied to it …\nAdditional methods for the [<code>Column</code>] and [<code>Row</code>] widgets.\nA set of concurrent actions to be performed by the iced …\nApply a function to this value and return the (possibly) …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nApply a function which takes the parameter by value.\nApply a function which takes the parameter by mutable …\nApply a function which takes the parameter by reference.\nCombines color with background to create appearance of …\nAppends all elements in an iterator to the widget.\nAppends all elements in an iterator to the widget.\nPushes an element into the widget.\nConditionally pushes an element to the widget.\nConditionally pushes an element to the widget.\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nA tabbed widget for switching between views in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nContains stylesheet implementations for widgets native to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe border radius of the menus.\nIgnore this message in your application. It will be …\nCreate a popup with a view function accepting the App as a …\nCreate a subsurface with a view function accepting the App …\nDestroy a subsurface with a view function\nDestroy a subsurface with a view function\nCreate a popup\nResponsive menu bar update\nCreate a subsurface with a view function\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits of the menu bar\nId of the menu bar\nRequested Full Size for expanded menu bar\nYields a task which contains a batch of tasks.\nYields a task which will run the future on the runtime …\nYields a task which will return a message.\nYields a task which will run a stream on the runtime …\naccent element colors\naccent button element colors\naccent text colors If None, accent base color is the …\nCurrently-defined theme.\ncosmic-comp active hint window outline width\nCurrently-defined theme type.\nThe transparency component. 0.0 (or 0u8) is fully …\nbackground element colors\nThe base color of the widget\nthe color of the border for the widget\nbutton component styling\nThe color.\ncontrol tint color\ncorner radii\nget current container can be used in a component that is …\ndestructive element colors\ndestructive button element colors\nthe color of the widget when it is disabled\nthe color of the border for the widget when it is disabled\nthe color of dividers for this widget\nthe color of the widget when it is focused\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncosmic-comp window gaps size (outer, inner)\nThe color of the widget when it is hovered\nicon button element colors\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the active theme has a dark preference.\nWhether the theme has a dark preference.\nis dark\nenables blurred transparency\nWhether the active theme is high contrast.\nWhether the theme has a high contrast.\nis high contrast\nlink button element colors\nname of the theme\nthe color of text for this widget\nthe color of text in the widget when it is disabled\npalette\nPrefer dark or light theme. If <code>None</code>, the system preference …\nthe color of the widget when it is pressed\nprimary element colors\nsecondary element colors\nthe color of the widget when it is selected\nthe color of the widget when it is selected\nset the theme\nshade color for dialogs\nPreferred interface spacing parameters defined by the …\nspacing\nStylesheet implements for <code>crate::Theme</code>\nsuggested element colors\nsuggested button element colors\nLoads the preferred system theme from <code>cosmic-config</code>.\ntext button element colors\ntext tint color\nwarning element colors\nwarning button element colors\ncosmic-comp custom window hint color\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nA tabbed widget for switching between views in an …\nContains stylesheet implementations for widgets native to …\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nThe border radius of the menus.\nA generic button which emits a message when pressed.\nA widget capable of drawing 2D graphics.\nItems are centered around the middle of the axis\nA box that can be checked.\nA widget for searching and selecting a single value from a …\nA widget that aligns its contents inside of its boundaries.\nA context menu is a menu in a graphical user interface …\nThe default gap.\nThe default height of a <code>ProgressBar</code>.\nThe default height of a <code>Slider</code>.\nThe default padding.\nThe default width of a <code>VerticalSlider</code>.\nA widget for selecting a single value from a list of …\nItems are packed toward the end of the axis\nItems are packed towards the flex-relative end of the axis.\nResponsively generates rows and columns of widgets based …\nItems are packed towards the flex-relative start of the …\nResponsively generates rows and columns of widgets based …\nAn image which may be an SVG or PNG.\nThe identifier of a generic widget.\nAn element decorating some content.\nA frame that displays an image while keeping aspect ratio.\nSets the distribution of space between and around content …\nAn element decorating some content.\nA widget that only rebuilds its contents when necessary.\nEmit messages on mouse events.\nA piece of logic that can traverse the widget tree of an …\nA collection of panes distributed using either vertical or …\nA container which displays overlays when a popup widget is …\nA bar that displays progress.\nA circular button representing a choice.\nA widget that is aware of its dimensions.\nAn horizontal bar and a handle that selects a single value …\nAn amount of empty space.\nThe gap between the first and last items is exactly HALF …\nThe first and last items are aligned flush with the edges …\nThe gap between the first and last items is exactly THE …\nItems are packed toward the start of the axis\nItems are stretched to fill the container\nA vector graphics image.\nA bunch of text.\nA multi-line text input.\nA field that can be filled with text.\nRepresent the data used to display a <code>Toast</code>\nAn vertical bar and a handle that selects a single value …\nA component that displays information and allows …\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nAligns the contents of the <code>Container</code> to the bottom.\nAligns the contents of the <code>Container</code> to the left.\nAligns the contents of the <code>Container</code> to the right.\nAligns the contents of the <code>Container</code> to the top.\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nSets the input to be always active. This makes it behave …\nA container which constraints itself to a specific aspect …\nSets the border radius of the image.\nDefines breakpoints to visibly mark on the slider.\nBuild the widget\nButton widgets for COSMIC applications.\nA widget that displays an interactive calendar.\nA widget that displays an interactive calendar.\nCanvases can be leveraged to draw interactive 2D graphics.\nCreates a new <code>Canvas</code>.\nCenters the contents in both the horizontal and vertical …\nPushes an element to the center region.\nSets the width of the <code>Container</code> and centers its contents …\nSets the height of the <code>Container</code> and centers its contents …\nCheckboxes can be used to let users make binary choices.\nCreates a new <code>Checkbox</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nSets the style class of the <code>Checkbox</code>.\nSets the style class of the <code>Container</code>.\nSets the style variant of this <code>Button</code>.\nSets the style class of the <code>PaneGrid</code>.\nSets the style class of the <code>ProgressBar</code>.\nSets the style class of the <code>Slider</code>.\nSets the style class of the <code>TextEditor</code>.\nSets the style class of the <code>VerticalSlider</code>.\nSets the style class of the <code>Svg</code>.\nSets whether the contents of the <code>Container</code> should be …\nWidgets for selecting colors with a color picker.\nA container which aligns its children in a column.\nA container which aligns its children in a column.\nCombo boxes display a dropdown list of searchable and …\nCreates a new <code>ComboBox</code>.\nContainers let you align a widget inside their boundaries.\nCreates a new <code>Container</code> with the provided content.\nOperates on a widget that contains other widgets.\nSets the <code>ContentFit</code> of the <code>Svg</code>.\nSets the <code>ContentFit</code> of the <code>Image</code>.\nAn overlayed widget that attaches a toggleable context …\nAn overlayed widget that attaches a toggleable context …\nA context menu is a menu in a graphical user interface …\nA context menu is a menu in a graphical user interface …\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nSets the optional default value for the <code>Slider</code>.\nSets the optional default value for the <code>VerticalSlider</code>.\nControls the density of the headerbar.\nSets the description of the <code>Checkbox</code>.\nSets the description of the <code>Button</code>.\nSets the description of the <code>Slider</code>.\nSets the description of the <code>Svg</code>.\nSets the description of the <code>Image</code>.\nSets the description of the <code>Checkbox</code>.\nSets the description of the <code>Button</code>.\nSets the description of the <code>Slider</code>.\nSets the description of the <code>Svg</code>.\nSets the description of the <code>Image</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAn element to distinguish a boundary between two elements.\nSets the mode of this <code>TextInput</code> to be a drag and drop icon.\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nDisplays a list of options in a popover menu on select.\nDisplays a list of options in a popover menu on select.\nA text label which can transform into a text input on …\nPushes an element to the end region.\nSets the error message of the <code>TextInput</code>.\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nSets the <code>FilterMethod</code> of the <code>Image</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nResponsively generates rows of widgets based on the …\nResponsively generates rows of widgets based on the …\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nFocused state of the window\nSets the <code>Renderer::Font</code> of the text of the <code>Checkbox</code>.\nSets the <code>Renderer::Font</code> of the <code>ComboBox</code>.\nSets the <code>Font</code> of the <code>TextEditor</code>.\nSets the <code>Font</code> of the <code>TextInput</code>.\nSets the the <code>Button</code> to enabled whether or not it has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Svg</code> that will display the contents of the …\nArrange widgets with a grid layout.\nArrange widgets with a grid layout.\nSets the height of the <code>Container</code>.\nSets the height of the <code>Button</code>.\nSets the height of the <code>PaneGrid</code>.\nSets the height of the <code>ProgressBar</code>.\nSets the height of the <code>Slider</code>.\nSets the height of the <code>TextEditor</code>.\nSets the height of the <code>VerticalSlider</code>.\nSets the height of the <code>Svg</code>.\nSets the height of the <code>Space</code>.\nSets the height of the <code>Image</code> boundaries.\nSets the height of the <code>Canvas</code>.\nSets the helper text of the <code>TextInput</code>.\nHighlights the <code>TextEditor</code> with the given <code>Highlighter</code> and a …\nCreates a new <code>Space</code> widget that fills the available …\nLazily-generated SVG icon widget for Iced.\nCreate an <code>Icon</code> from a pre-existing <code>Handle</code>\nSets the <code>Icon</code> of the <code>Checkbox</code>.\nSets the <code>text_input::Icon</code> of the <code>ComboBox</code>.\nSets the <code>Id</code> of the <code>Button</code>.\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nSets the [<code>Id</code>] of the <code>ContextDrawer</code>.\nSets the <code>Id</code> of the <code>TextInput</code>.\nImages display raster graphics in different formats (PNG, …\nCreates a new <code>Image</code>.\nCreates a new inline <code>TextInput</code>.\nSets the style class of the input of the <code>ComboBox</code>.\nSets the style of the input of the <code>ComboBox</code>.\nThe <code>mouse::Interaction</code> to use when hovering the area.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the headerbar should be compact\nHeaderBar used for server-side decorations\nSets the closure to produce key bindings on key presses.\nSets the label of the <code>Button</code>.\nSets the label of the <code>Slider</code>.\nSets the label of the <code>Svg</code>.\nSets the text of the <code>TextInput</code>.\nSets the label of the <code>Image</code>.\nApplies the <strong>Large</strong> button size preset.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nSets the start [<code>Icon</code>] of the <code>TextInput</code>.\nSets the <code>LineHeight</code> of the <code>ComboBox</code>.\nSets the <code>text::LineHeight</code> of the <code>TextEditor</code>.\nSets the [<code>LineHeight</code>] of the <code>TextInput</code>.\nSets the text input to manage its input value or not\nMap the message type of the context drawer to another\nSets the maximum height of the <code>Container</code>.\nSets the maximum width of the <code>Container</code>.\nMaximized state of the window\nApplies the <strong>Medium</strong> button size preset.\nA <code>MenuBar</code> widget for displaying [<code>MenuTree</code>]s\nSets the style class of the menu of the <code>ComboBox</code>.\nSets the style of the menu of the <code>ComboBox</code>.\nA container intercepting mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nSets the name of the <code>Checkbox</code>.\nSets the name of the <code>Button</code>.\nSets the name of the <code>Slider</code>.\nSets the name of the <code>Svg</code>.\nSets the name of the <code>Image</code>.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views. Can …\nA button for toggling the navigation side panel.\nCreates a custom <code>Id</code>.\nCreates a <code>MouseArea</code> with the given content.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>ComboBox</code> with the given list of options, a …\nCreates a <code>Container</code> with the given content.\nCreates an empty <code>ContextDrawer</code>.\nCreates a <code>PaneGrid</code> with the given <code>State</code> and view function.\nCreates a new <code>ProgressBar</code>.\nCreates a new <code>Slider</code>.\nCreates new <code>TextEditor</code> with the given <code>Content</code>.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nCreates a new <code>Svg</code> from the given <code>Handle</code>.\nCreates an amount of empty <code>Space</code> with the given width and …\nCreates a new <code>TextInput</code>.\nCreates a new <code>Dropdown</code> with the given list of selections, …\nCreates a new <code>Image</code> with the given path.\nCreates a new <code>Canvas</code>.\nSets the message that should be produced when some action …\nSets the message that will be produced when a <code>Pane</code> of the …\nSets the message that will be produced when the outside …\nA message emitted when the close button is pressed.\nOptionally assigns message to <code>on_close</code> event.\nThe message to emit on a double click.\nA message emitted when the header is double clicked, …\nThe message to emit on a left double button press.\nThe message to emit when a drag is initiated.\nEnables the drag and drop interactions of the <code>PaneGrid</code>, …\nA message emitted when dragged.\nThe message to emit when the mouse enters the area.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nThe message to emit when the mouse exits the area.\nEmits a message when an unfocused text input has been …\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nA message emitted when the maximize button is pressed.\nThe message to emit on a middle button press.\nThe message to emit on a middle button release.\nA message emitted when the minimize button is pressed.\nThe message to emit when the mouse moves in the area.\nSets the message that will be produced when the  <code>ComboBox</code> …\nSets the message that will be produced when an option of …\nSets the message that should be produced when some text is …\nThe message to emit on a left button press.\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nThe message to emit on a left button release.\nSets the release message of the <code>Slider</code>. This is called …\nSets the release message of the <code>VerticalSlider</code>. This is …\nEnables the resize interactions of the <code>PaneGrid</code>, which will\nA message emitted when the header is right clicked.\nThe message to emit on a right button press.\nThe message to emit on a right button release.\nThe message to emit when scroll wheel is used\nEmits a message when a focused text input receives the …\nOptionally emits a message when a focused text input …\nEmits a message when the Tab key has been captured, which …\nSets the function that will be called when the <code>Checkbox</code> is …\nEmits a message when the editable state of the input …\nSets the function that will be called when the <code>Checkbox</code> is …\nEmits a message when a focused text input has been …\nSets the opacity of the <code>Svg</code>.\nSets the opacity of the <code>Image</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nSets the <code>Padding</code> of the <code>ComboBox</code>.\nSets the <code>Padding</code> of the <code>Container</code>.")